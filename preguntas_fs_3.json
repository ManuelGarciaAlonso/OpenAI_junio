[
    {
      "question": "¿Qué ejercicios hay disponibles en el Tema 1?",
      "ground_truth": "En el Tema 1 se encuentran disponibles los ejercicios del 1 al 8.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "1", "ejercicio": null}
    },
    {
      "question": "¿Cuáles son los ejercicios de Fundamentos del Software relacionados con el Sistema de Cómputo?",
      "ground_truth": "Los ejercicios del Tema 1 relacionados con el Sistema de Cómputo son del 1 al 8.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "1", "ejercicio": null}
    },
    {
      "question": "Muéstrame la lista de problemas del tema 2.",
      "ground_truth": "La relación de problemas del Tema 2 es: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "2", "ejercicio": null}
    },
    {
      "question": "¿Qué problemas se presentan en el tema 'Introducción a los Sistemas Operativos'?",
      "ground_truth": "Los problemas presentados en el tema 'Introducción a los Sistemas Operativos' (Tema 2) son del 1 al 23.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "2", "ejercicio": null}
    },
    {
      "question": "Dime los números de ejercicio del Tema 3.",
      "ground_truth": "Los ejercicios del Tema 3 son del 1 al 16.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "3", "ejercicio": null}
    },
    {
      "question": "Lista los ejercicios del tema 'Compilación y Enlazado de Programas'.",
      "ground_truth": "Los ejercicios del tema 'Compilación y Enlazado de Programas' (Tema 3) son del 1 al 16.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "3", "ejercicio": null}
    },
    {
      "question": "¿Qué ejercicios hay en el Tema 4 sobre Bases de Datos?",
      "ground_truth": "En el Tema 4 sobre Bases de Datos hay 4 ejercicios: del 1 al 4.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "4", "ejercicio": null}
    },
    {
      "question": "Dime qué ejercicios tratan sobre Bases de Datos en los documentos proporcionados.",
      "ground_truth": "Los ejercicios que tratan sobre Bases de Datos son del 1 al 4 en el Tema 4 (ProblemasTema4-1.pdf).",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "4", "ejercicio": null}
    },
    {
      "question": "Enumera los ejercicios del Tema 1 relacionados con los métodos de comunicación de E/S.",
      "ground_truth": "Los ejercicios 1 y 2 del Tema 1 tratan sobre los métodos de comunicación de E/S.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "1", "ejercicio": null}
    },
    {
      "question": "¿Qué ejercicios del Tema 2 se refieren a la gestión de memoria paginada?",
      "ground_truth": "Los ejercicios del Tema 2 que se refieren a la gestión de memoria paginada son el 14, 15, 16, 17, 18, 19, 20 y 21.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "2", "ejercicio": null}
    },
    {
      "question": "Menciona los problemas del Tema 3 que abordan las fases de la compilación.",
      "ground_truth": "Los problemas del Tema 3 que abordan las fases de la compilación son el 4, 5, 6, 7, 8, 14 y 15.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "3", "ejercicio": null}
    },
    {
      "question": "Indica los ejercicios del Tema 4 que piden diseñar un esquema relacional.",
      "ground_truth": "Todos los ejercicios del Tema 4 (1, 2, 3 y 4) piden diseñar un esquema relacional a partir de un modelo ER.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "4", "ejercicio": null}
    },
    {
      "question": "Dame los números de ejercicio del Tema 1 que involucran registros del procesador.",
      "ground_truth": "Los ejercicios del Tema 1 que involucran registros del procesador son el 4, 5 y 9.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "1", "ejercicio": null}
    },
    {
      "question": "¿Qué ejercicios del Tema 2 tratan sobre los modos de funcionamiento del sistema operativo (supervisor/usuario)?",
      "ground_truth": "Los ejercicios 7 y 8 del Tema 2 tratan sobre los modos de funcionamiento supervisor/usuario.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "2", "ejercicio": null}
    },
    {
      "question": "En el Tema 3, ¿qué ejercicios se centran en los errores de compilación?",
      "ground_truth": "En el Tema 3, los ejercicios 6, 7, 8, 15 y 16 se centran en los errores de compilación y su detección.",
      "difficulty": "básica",
      "category": "listado",
      "metadata": {"tema": "3", "ejercicio": null}
    },
    {
      "question": "Dame el enunciado del ejercicio 1 del Tema 1.",
      "ground_truth": "El método de comunicación de E/S en el que la CPU está esperando hasta que la operación de E/S ha finalizado se conoce como: (a) E/S Programada. (b) E/S Dirigida por Interrupciones. (c) DMA. (d) E/S a Distancia.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "1", "ejercicio": 1}
    },
    {
      "question": "Explícame el ejercicio 3 del Tema 1.",
      "ground_truth": "El ejercicio 3 del Tema 1 pregunta: ¿Cuál de las siguientes afirmaciones es correcta: (a) En algunas computadoras un programa puede ejecutarse sin necesidad de cargarlo en la memoria principal. (b) Un programa, para que se ejecute, debe estar cargado en la memoria principal. (c) Un programa, para que se ejecute, basta con que esté en el disco duro. (d) Un programa, para que se ejecute, si está en lenguaje máquina, puede estar en cualquier unidad.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "1", "ejercicio": 3}
    },
    {
      "question": "Cuál es la pregunta del ejercicio 4 del Tema 1.",
      "ground_truth": "La pregunta del ejercicio 4 del Tema 1 es: Dado el esquema de un computador elemental según se ha descrito en el tema, el puntero de pila (SP) indica: (a) La dirección de memoria donde debe saltar el programa después de ejecutarse la instrucción de retorno correspondiente. (b) La dirección de memoria donde se encuentra la dirección donde debe saltar el programa después de ejecutarse la instrucción de retorno correspondiente. (c) La dirección de memoria a donde se ha producido el último salto. (d) La dirección de memoria donde se encuentra la dirección a donde se ha producido la última llamada a una subrutina.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "1", "ejercicio": 4}
    },
    {
      "question": "Muestra el ejercicio 6 del Tema 1.",
      "ground_truth": "El ejercicio 6 del Tema 1 dice: Suponiendo que el lenguaje máquina de la arquitectura anterior dispone de 14 instrucciones distintas, muestre cuántos bits serían necesarios para codificar las instrucciones SUMAR R0,R1,R2 y MOVER 20,R0 respectivamente. Instrucción Descripción MOVER Orig,Dest Copia el valor del origen (Orig) al destino (Dest). SUMAR Ri,Rj,Rk Suma el valor de Ri y Rj, depositando el resultado en Rk. IN Pi, Dest Lee del Puerto (Pi) y lo deposita en el destino (Dest). OUT Pi, Orig Escribe el contenido del origen (Orig) en el puerto Pi. HALT Detiene al procesador.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "1", "ejercicio": 6}
    },
    {
      "question": "Quiero saber el enunciado del ejercicio 7 del Tema 1.",
      "ground_truth": "El enunciado del ejercicio 7 del Tema 1 es: Imagina que el procesador está ejecutando el programa de usuario del ejercicio 5 y en este momento al terminar de ejecutar la instrucción actual, el procesador se da cuenta de que hay una interrupción pendiente. Escribe los pasos que se dan en el sistema y por quién (software o hardware) hasta que se resuelve el tratamiento de la interrupción y el programa finaliza, sabiendo que la rutina de tratamiento de la interrupción comienza en la dirección de memoria principal 56 y termina en la dirección de memoria principal 70.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "1", "ejercicio": 7}
    },
    {
      "question": "Dame el ejercicio 1 del Tema 2-2.",
      "ground_truth": "El ejercicio 1 del Tema 2-2 es: Dado un proceso en un SO con su información de contexto, de datos y de código según se muestra en la figura y que ya ha sido atendido en un 50% y le resta la otra mitad para finalizar su ejecución. Con la idea de optimizar el espacio de memoria para que el SO pudiera disponer de un mayor número de procesos en ésta, ¿podría reducirse el espacio que ocupa en memoria en alguna de las siguientes instancias? (a) La lista de procesos. (b) Información del contexto del proceso. (c) Tamaño de los datos. (d) Tamaño del código.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
      "question": "Cuál es el enunciado del ejercicio 2 del Tema 2.",
      "ground_truth": "El enunciado del ejercicio 2 del Tema 2 es: ¿Por qué cuando un proceso está en modo “ejecutándose” y pretende acceder a una dirección de memoria fuera del área asignada, se informa de que se ha producido un error en la ejecución? ¿Quién informa de ello? Razone la respuesta.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": 2}
    },
    {
      "question": "Quiero ver el ejercicio 5 del Tema 2.",
      "ground_truth": "El ejercicio 5 del Tema 2 es: Un planificador de procesos tiene una tarea concreta dentro de un SO multiprogramado. ¿Tiene sentido disponer de un planificador de procesos en un SO monoprogramado? Razone la respuesta.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": 5}
    },
    {
      "question": "Explícame el ejercicio 7 del Tema 2.",
      "ground_truth": "El ejercicio 7 del Tema 2 pide: Diga cuales de las siguientes operaciones pueden realizarse únicamente en modo supervisor, o modo kernel: a) Consultar la hora del sistema. b) Cambiar la fecha del sistema. c) Leer una pista/sector de un disco magnético. d) Generar una interrupción software. e) Generar una interrupción. f) Modificar la dirección de un vector de la tabla de vectores de interrupción. g) Deshabilitar las interrupciones.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": 7}
    },
    {
      "question": "Cuál es la pregunta 9b del Tema 2?",
      "ground_truth": "La pregunta 9b del Tema 2 es: Cuando el controlador de un dispositivo produce una interrupción ¿se produce necesariamente un cambio de contexto?, ¿y cuando se produce una llamada al sistema?.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": "9b"}
    },
    {
      "question": "Muestra el problema 10 del Tema 2-2.",
      "ground_truth": "El problema 10 del Tema 2-2 es: En los primeros ordenadores, cada byte de datos leído o escrito, era manejado directamente por la CPU (es decir, no existía DMA - Acceso Directo a Memoria). ¿Qué implicaciones tenía esta organización para la multiprogramación?.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": 10}
    },
    {
      "question": "Dame el enunciado del ejercicio 11 del Tema 2.",
      "ground_truth": "El enunciado del ejercicio 11 del Tema 2 es: ¿Por qué no es el intérprete de órdenes (shell) parte del propio sistema operativo? ¿Qué ventajas aporta el no serlo?.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": 11}
    },
    {
      "question": "Dime el problema 14 del Tema 2.",
      "ground_truth": "El problema 14 del Tema 2 es: ¿Por qué se utilizan potencias de dos para los tamaños de página, número de páginas en el espacio lógico de un proceso, y números de marcos de página?.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": 14}
    },
    {
      "question": "Quiero leer el ejercicio 15a del Tema 2.",
      "ground_truth": "El ejercicio 15a del Tema 2 pregunta: Sitúese en un sistema paginado, en donde la memoria real tiene un tamaño de 16 Mbytes, una dirección lógica ocupa 32 bits, de los cuales los 22 de la izquierda constituyen el número de página, y los 10 de la derecha el desplazamiento dentro de la página. Según lo anterior, a) ¿Qué tamaño tiene cada página?.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": "15a"}
    },
    {
      "question": "Cuál es la pregunta 16a del Tema 2?",
      "ground_truth": "La pregunta 16a del Tema 2 es: Suponga que la tabla de páginas para el proceso actual se parece a la de la figura. Todos los números son decimales, la numeración comienza en todos los casos desde cero, y todas las direcciones de memoria son direcciones en bytes. El tamaño de página es de 1024 bytes. Número de página virtual (0,1,2,3,4,5), Número de marco de página (4,7,1,2,10,0). ¿Qué direcciones físicas corresponderán con cada una de las siguientes direcciones lógicas del proceso? a) 999.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": "16a"}
    },
    {
      "question": "Muestra el ejercicio 17 del Tema 2.",
      "ground_truth": "El ejercicio 17 del Tema 2 es: ¿Qué tipo de fragmentación se produce en un sistema de gestión de memoria paginado? ¿Qué decisiones de diseño se pueden tomar para minimizar dicho problema, y cómo afectan estas decisiones al comportamiento del sistema?.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": 17}
    },
    {
      "question": "Dime el ejercicio 19a del Tema 2.",
      "ground_truth": "El ejercicio 19a del Tema 2 es: Suponga que tenemos 3 procesos ejecutándose concurrentemente en un determinado instante. El sistema operativo utiliza un sistema de memoria con paginación. Se dispone de una memoria física de 131072 bytes (128K). Sabemos que nuestros procesos al ser ejecutados tienen los parámetros que se muestran en la tabla. Los datos indican el tamaño en bytes de cada uno de los segmentos que forman parte de la imagen del proceso. Sabiendo que una página no puede contener partes de dos segmentos diferentes (pila, código o datos), hemos de determinar el tamaño de página que debería utilizar nuestro sistema y se barajan dos opciones: páginas de 4096 bytes (4K) o páginas de 512 bytes (1/2K). Se pide: a) ¿Cuál sería la opción más apropiada, 4096 bytes o 512 bytes?. Justifica totalmente la respuesta mostrando todos los cálculos que has necesitado para llegar a dicha conclusión.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": "19a"}
    },
    {
      "question": "Cuál es el enunciado del ejercicio 22a del Tema 2?",
      "ground_truth": "El enunciado del ejercicio 22a del Tema 2 es: Considere la siguiente tabla de segmentos: Segmento (0,1,2,3,4), dirección base (219,2300,90,1327,1952), longitud (600,14,100,580,96). ¿Qué direcciones físicas corresponden a las direcciones lógicas (nº_segmento, desplazamiento) siguientes? Si no puede traducir alguna dirección lógica a física, explique el por qué. a) 0, 430.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "2", "ejercicio": "22a"}
    },
    {
      "question": "Dame el ejercicio 1 del Tema 3.",
      "ground_truth": "El ejercicio 1 del Tema 3 es: Un procesador (CPU) puede interpretar y ejecutar directamente las instrucciones de un programa en: (a) Lenguaje de alto nivel de tipo intérprete. (b) Lenguaje ensamblador o en lenguaje máquina, cualquiera de los dos. (c) Sólo lenguaje máquina. (d) En pseudocódigo o en lenguaje ensamblador.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "3", "ejercicio": 1}
    },
    {
      "question": "Explícame el ejercicio 2 del Tema 3.",
      "ground_truth": "El ejercicio 2 del Tema 3 pregunta: ¿Es lo mismo un token que un lexema? Muestre algún ejemplo.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "3", "ejercicio": 2}
    },
    {
      "question": "Quiero ver el ejercicio 4 del Tema 3.",
      "ground_truth": "El ejercicio 4 del Tema 3 dice: El análisis léxico es una etapa de la compilación cuyo objetivo es: (a) Extraer la estructura de cada sentencia, reconociendo los componentes léxicos (tokens) del lenguaje. (b) Descomponer el programa fuente en sus componentes léxicos (tokens). (c) Extraer el significado de las distintas construcciones sintácticas y elementos terminales. (d) Sintetizar el programa objeto.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "3", "ejercicio": 4}
    },
    {
      "question": "Cuál es el error a) del ejercicio 6 del Tema 3?",
      "ground_truth": "El error a) del ejercicio 6 del Tema 3 es: test.cpp:9: error: expected primary-expression be-fore ‘;’ token para la línea 'i += ;'.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "3", "ejercicio": "6a"}
    },
    {
      "question": "Muestra el ejercicio 7 del Tema 3.",
      "ground_truth": "El ejercicio 7 del Tema 3 dice: Muestre un ejemplo a partir de una sentencia en lenguaje C++ en la que un error léxico origine un error sintáctico derivado y otro error léxico que no derive en error sintáctico.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "3", "ejercicio": 7}
    },
    {
      "question": "Dime el enunciado del ejercicio 10 del Tema 3.",
      "ground_truth": "El enunciado del ejercicio 10 del Tema 3 es: Dado un programa escrito en lenguaje ensamblador de una arquitectura concreta, ¿sería directamente interpretable ese código por esa computadora? En caso contrario ¿qué habría que hacer?.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "3", "ejercicio": 10}
    },
    {
      "question": "Qué pide el ejercicio 14a del Tema 3?",
      "ground_truth": "El ejercicio 14a del Tema 3 pide: Indique en qué fase del proceso de traducción y ejecución de un programa se realizará cada una de las siguientes tareas: (a) Enlazar una biblioteca estática.",
      "difficulty": "básica",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "3", "ejercicio": "14a"}
    },
    {
      "question": "Dame el ejercicio 15a del Tema 3.",
      "ground_truth": "El ejercicio 15a del Tema 3 pide: Indique en qué fase o fases del proceso de compilación de un lenguaje de programación de alto nivel se detectarían los siguientes errores: (a) Una variable no está definida.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "3", "ejercicio": "15a"}
    },
    {
      "question": "Explícame el ejercicio 1 del Tema 4.",
      "ground_truth": "El ejercicio 1 del Tema 4 solicita: Se desea diseñar un esquema relacional de una base de datos para un centro de enseñanza que contenga información sobre los alumnos (dni, nombre, dirección...), las asignaturas (código de asignatura y nombre de esta se considera la información mínima) y las calificaciones que se obtienen en cada una de las mismas. Desarrollar un modelo ER del mismo y posteriormente reducirlo a tablas.",
      "difficulty": "intermedia",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "4", "ejercicio": 1}
    },
    {
      "question": "Cuál es el enunciado del ejercicio 2 del Tema 4?",
      "ground_truth": "El enunciado del ejercicio 2 del Tema 4 es: Se desea diseñar la base de datos de una biblioteca particular, de modo que para cada libro se deberá almacenar: su título, número de páginas, ISBN, materia, año de edición, editorial y autor o autores del mismo, para los que, además de su nombre, se recogerán los siguientes datos: dirección de correo electrónico, nacionalidad y fecha de nacimiento. Además, para cada editorial se deberá guardar su dirección, localidad y país. Teniendo en cuenta que se pueden añadir los campos que se consideren oportunos para poder relacionar convenientemente las distintas entidades del problema, realizar lo que se pide en cada uno de los siguientes apartados: * Dibujar el esquema conceptual, utilizando el modelo entidad-relación. * Obtener, a partir de lo realizado en el apartado anterior, las tablas que se tendrían que crear en un SGBD relacional, indicando qué campos compondrían cada tabla y cuál sería la clave primaria de cada una de ellas.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
      "question": "Quiero saber el ejercicio 3 del Tema 4.",
      "ground_truth": "El ejercicio 3 del Tema 4 dice: Suponga que la base de datos para una Universidad del ejercicio (1) considera además de la información sobre los alumnos y las asignaturas, las carreras que se pueden estudiar. Construir un modelo ER y pasarlo posteriormente a un esquema relacional teniendo en cuenta las siguientes restricciones: * Un alumno puede estar matriculado en muchas asignaturas. * Una asignatura sólo puede pertenecer a una carrera. * Una carrera puede tener muchas asignaturas.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "4", "ejercicio": 3}
    },
    {
      "question": "Muestra el problema 4 del Tema 4.",
      "ground_truth": "El problema 4 del Tema 4 dice: Se desea diseñar una base de datos para un centro comercial organizado por secciones que contenga información sobre los clientes que han comprado algo, los trabajadores, el género que se oferta y las ventas realizadas. Construir un modelo ER y pasarlo posteriormente a un esquema relacional teniendo en cuenta las siguientes restricciones: * Existen tres tipos de trabajadores: gerentes, jefes y vendedores. * Cada sección está gestionado por un gerente. * Un determinado producto sólo se encuentra en una sección. * Los jefes y vendedores sólo pueden pertenecer a una única sección. * Un gerente tiene a su cargo a un cierto número de jefes y éstos a su vez a un cierto número de vendedores. * Una venta la realiza un vendedor a un cliente y debe quedar constancia del artículo vendido. Sólo un artículo por apunte de venta.",
      "difficulty": "avanzada",
      "category": "directas sobre ejercicios",
      "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
      "question": "¿Qué es la E/S Programada?",
      "ground_truth": "La E/S Programada es un método de comunicación de E/S en el que la CPU está esperando hasta que la operación de E/S ha finalizado.",
      "difficulty": "básica",
      "category": "conceptual",
      "metadata": {"tema": "1", "ejercicio": 1}
    },
    {
      "question": "¿Cuál es la función del puntero de pila (SP) en un computador elemental?",
      "ground_truth": "Según el Tema 1, el puntero de pila (SP) indica la dirección de memoria donde se encuentra la dirección a donde se ha producido la última llamada a una subrutina.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "1", "ejercicio": 4}
    },
    {
      "question": "¿Qué diferencia hay entre una interrupción y una excepción?",
      "ground_truth": "El ejercicio 8 del Tema 1 pregunta sobre las diferencias. Generalmente, una interrupción es un evento asíncrono generado externamente (por hardware), mientras que una excepción es un evento síncrono generado internamente por la CPU debido a una condición de error o instrucción especial.",
      "difficulty": "avanzada",
      "category": "conceptual",
      "metadata": {"tema": "1", "ejercicio": 8}
    },
    {
      "question": "¿Es necesario cargar un programa en la memoria principal para que se ejecute?",
      "ground_truth": "Sí, un programa, para que se ejecute, debe estar cargado en la memoria principal.",
      "difficulty": "básica",
      "category": "conceptual",
      "metadata": {"tema": "1", "ejercicio": 3}
    },
    {
      "question": "¿Qué es la información de contexto de un proceso?",
      "ground_truth": "La información de contexto de un proceso incluye los datos y el código del proceso, así como otros datos necesarios para su ejecución y gestión por el Sistema Operativo. El ejercicio 1 del Tema 2-2 se refiere a ella como una parte del proceso que ocupa espacio en memoria.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
      "question": "¿Por qué un planificador de procesos tiene sentido en un SO multiprogramado?",
      "ground_truth": "Un planificador de procesos tiene sentido en un SO multiprogramado porque es responsable de decidir qué proceso se ejecutará en la CPU y por cuánto tiempo, gestionando el uso concurrente de los recursos y optimizando el rendimiento del sistema.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "2", "ejercicio": 5}
    },
    {
      "question": "¿Qué operaciones se pueden realizar solo en modo supervisor?",
      "ground_truth": "Según el ejercicio 7 del Tema 2, operaciones como cambiar la fecha del sistema, leer una pista/sector de un disco magnético, modificar la dirección de un vector de la tabla de vectores de interrupción y deshabilitar las interrupciones pueden realizarse únicamente en modo supervisor.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "2", "ejercicio": 7}
    },
    {
      "question": "¿Qué implicaciones tenía la ausencia de DMA para la multiprogramación en los primeros ordenadores?",
      "ground_truth": "En los primeros ordenadores, sin DMA, la CPU manejaba directamente cada byte de datos leído o escrito, lo que implicaba que la CPU estaba constantemente ocupada con las operaciones de E/S. Esto reducía significativamente la eficiencia y el rendimiento de la multiprogramación, ya que la CPU no podía realizar otras tareas mientras esperaba las operaciones de E/S.",
      "difficulty": "avanzada",
      "category": "conceptual",
      "metadata": {"tema": "2", "ejercicio": 10}
    },
    {
      "question": "¿Qué es la fragmentación interna en un sistema paginado?",
      "ground_truth": "La fragmentación interna se produce en un sistema de gestión de memoria paginado cuando el tamaño de los datos de un proceso no es un múltiplo exacto del tamaño de la página, dejando espacio sin usar dentro de la última página asignada a ese proceso. El ejercicio 21 del Tema 2 pide calcularla.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "2", "ejercicio": 17}
    },
    {
      "question": "¿Cuál es la ventaja de que el intérprete de órdenes (shell) no sea parte del propio sistema operativo?",
      "ground_truth": "La ventaja principal es la flexibilidad. Al no ser parte del kernel, el shell puede ser modificado o reemplazado por los usuarios, y nuevas versiones o variantes pueden ser desarrolladas sin afectar al núcleo del sistema operativo. Esto permite una mayor personalización y adaptabilidad.",
      "difficulty": "avanzada",
      "category": "conceptual",
      "metadata": {"tema": "2", "ejercicio": 11}
    },
    {
      "question": "¿Qué son los tokens en el contexto de la compilación?",
      "ground_truth": "Los tokens son los componentes léxicos en los que se descompone el programa fuente durante la fase de análisis léxico de la compilación. El ejercicio 2 del Tema 3 pregunta si es lo mismo que un lexema.",
      "difficulty": "básica",
      "category": "conceptual",
      "metadata": {"tema": "3", "ejercicio": 2}
    },
    {
      "question": "¿Qué es el análisis léxico y cuál es su objetivo?",
      "ground_truth": "El análisis léxico es la etapa de la compilación cuyo objetivo es descomponer el programa fuente en sus componentes léxicos, conocidos como tokens.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "3", "ejercicio": 4}
    },
    {
      "question": "¿Cuál es el propósito del análisis sintáctico en un compilador?",
      "ground_truth": "El análisis sintáctico es una etapa de la compilación cuyo objetivo es extraer la estructura de cada sentencia, reconociendo los componentes léxicos (tokens) del lenguaje.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "3", "ejercicio": 5}
    },
    {
      "question": "¿Puede un procesador ejecutar directamente un programa en lenguaje ensamblador?",
      "ground_truth": "No, un procesador (CPU) puede interpretar y ejecutar directamente las instrucciones de un programa solo en lenguaje máquina. El lenguaje ensamblador requiere un ensamblador para ser traducido a lenguaje máquina antes de su ejecución.",
      "difficulty": "básica",
      "category": "conceptual",
      "metadata": {"tema": "3", "ejercicio": 1}
    },
    {
      "question": "¿Qué es un enlazador y por qué es necesario?",
      "ground_truth": "El enlazador es una utilidad que combina diferentes módulos de código (objetos) y bibliotecas para producir un programa ejecutable final. Es necesario para resolver referencias a símbolos externos y funciones que pueden estar definidas en otros archivos o bibliotecas.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "3", "ejercicio": 11}
    },
    {
      "question": "¿Cuál es la diferencia entre una biblioteca estática y una dinámica?",
      "ground_truth": "Una biblioteca estática se enlaza al programa durante la fase de enlazado, incorporando el código de la biblioteca directamente en el ejecutable. Una biblioteca dinámica se enlaza en tiempo de ejecución, lo que significa que su código no se incorpora al ejecutable, sino que se carga cuando el programa lo necesita. El ejercicio 13 del Tema 3 explica la ventaja de las dinámicas.",
      "difficulty": "avanzada",
      "category": "conceptual",
      "metadata": {"tema": "3", "ejercicio": 13}
    },
    {
      "question": "¿En qué fase se detectaría un error donde una variable no ha sido declarada?",
      "ground_truth": "Un error de que una variable no ha sido declarada se detectaría en la fase de **análisis semántico** de la compilación.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "3", "ejercicio": "15a"}
    },
    {
      "question": "¿Puede un error sintáctico no originar un error semántico?",
      "ground_truth": "Sí, no todo error sintáctico origina un error semántico. Por ejemplo, en C++, si se olvida un punto y coma al final de una línea, es un error sintáctico. El programa no compilará, pero la lógica de las sentencias (si fueran válidas individualmente) no implica un error de significado antes de la detección sintáctica.",
      "difficulty": "avanzada",
      "category": "conceptual",
      "metadata": {"tema": "3", "ejercicio": 16}
    },
    {
      "question": "¿Por qué se usan potencias de dos para los tamaños de página en un sistema operativo paginado?",
      "ground_truth": "Se utilizan potencias de dos para los tamaños de página, número de páginas y marcos de página debido a la eficiencia en el direccionamiento de memoria. Permite que las divisiones y multiplicaciones necesarias para calcular direcciones físicas (número de página y desplazamiento) se puedan realizar con operaciones de bits (desplazamientos), que son mucho más rápidas para el hardware del computador.",
      "difficulty": "avanzada",
      "category": "conceptual",
      "metadata": {"tema": "2", "ejercicio": 14}
    },
    {
      "question": "¿Es necesario que lo último que haga un proceso antes de finalizar sea una llamada al sistema para terminar?",
      "ground_truth": "Sí, es necesario que lo último que haga todo proceso antes de finalizar sea una llamada al sistema para terminar su ejecución y liberar sus recursos. Esto sigue siendo cierto en sistemas monoprogramados.",
      "difficulty": "intermedia",
      "category": "conceptual",
      "metadata": {"tema": "2", "ejercicio": "9a"}
    },
    {
      "question": "¿Es la opción (a) la respuesta correcta al ejercicio 1 del Tema 1, que dice que el método de E/S programada es cuando la CPU espera la operación?",
      "ground_truth": "Sí, la opción (a) E/S Programada es la respuesta correcta al ejercicio 1 del Tema 1.",
      "difficulty": "básica",
      "category": "verificación de respuestas",
      "metadata": {"tema": "1", "ejercicio": 1}
    },
    {
      "question": "¿Es cierto que un programa, para ejecutarse, basta con que esté en el disco duro, según el ejercicio 3 del Tema 1?",
      "ground_truth": "No, no es cierto. Según el ejercicio 3 del Tema 1, un programa, para que se ejecute, debe estar cargado en la memoria principal.",
      "difficulty": "básica",
      "category": "verificación de respuestas",
      "metadata": {"tema": "1", "ejercicio": 3}
    },
    {
      "question": "Para el ejercicio 4 del Tema 1, ¿el puntero de pila (SP) indica la dirección de memoria donde debe saltar el programa después de ejecutarse la instrucción de retorno correspondiente?",
      "ground_truth": "No, según el ejercicio 4 del Tema 1, el puntero de pila (SP) indica la dirección de memoria donde se encuentra la dirección a donde se ha producido la última llamada a una subrutina. La opción (a) es incorrecta.",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "1", "ejercicio": 4}
    },
    {
      "question": "¿Es correcta la afirmación de que el tamaño del código de un proceso puede reducirse para optimizar el espacio de memoria, según el ejercicio 1 del Tema 2?",
      "ground_truth": "No, según el ejercicio 1 del Tema 2, el tamaño del código (d) de un proceso no puede reducirse para optimizar el espacio de memoria una vez que ya ha sido atendido en un 50%, ya que es el código que se está ejecutando. Lo que se podría reducir es el tamaño de los datos o el contexto si fuera posible.",
      "difficulty": "avanzada",
      "category": "verificación de respuestas",
      "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
      "question": "Si un proceso en modo 'ejecutándose' accede a memoria fuera de su área, ¿pasa a modo 'bloqueado' según el ejercicio 4 del Tema 2?",
      "ground_truth": "No, si un proceso en modo 'ejecutándose' accede a una dirección de memoria fuera de su área asignada, se produce un error en la ejecución y el proceso pasaría a modo 'finalizado', no 'bloqueado'.",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "2", "ejercicio": 4}
    },
    {
      "question": "¿Puede consultarse la hora del sistema únicamente en modo supervisor, según el ejercicio 7a del Tema 2?",
      "ground_truth": "No, consultar la hora del sistema (a) no requiere modo supervisor. Es una operación que puede realizarse también en modo usuario.",
      "difficulty": "básica",
      "category": "verificación de respuestas",
      "metadata": {"tema": "2", "ejercicio": "7a"}
    },
    {
      "question": "¿Es cierto que cuando el controlador de un dispositivo produce una interrupción, se produce necesariamente un cambio de contexto, según el ejercicio 9b del Tema 2?",
      "ground_truth": "Sí, cuando el controlador de un dispositivo produce una interrupción, se produce necesariamente un cambio de contexto para que el SO pueda atender la interrupción.",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "2", "ejercicio": "9b"}
    },
    {
      "question": "Según el ejercicio 12c del Tema 2, ¿suspender o bloquear un proceso implica un cambio de contexto?",
      "ground_truth": "Sí, suspender o bloquear un proceso (c) implica un cambio de contexto, ya que el estado del proceso actual debe guardarse y se debe cargar el contexto de otro proceso (o del sistema operativo).",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "2", "ejercicio": "12c"}
    },
    {
      "question": "¿En un sistema paginado con memoria de 16 Mbytes y dirección lógica de 32 bits (22 bits página, 10 bits desplazamiento), el tamaño de cada página es 1024 bytes (2^10)? (Ejercicio 15a Tema 2)",
      "ground_truth": "Sí, según el ejercicio 15a del Tema 2, si los 10 bits de la derecha constituyen el desplazamiento dentro de la página, entonces el tamaño de cada página es 2^10 bytes, es decir, 1024 bytes.",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "2", "ejercicio": "15a"}
    },
    {
      "question": "¿Es el análisis léxico la etapa que extrae la estructura de cada sentencia, reconociendo los tokens, según el ejercicio 4 del Tema 3?",
      "ground_truth": "No, el análisis léxico (b) descompone el programa fuente en sus componentes léxicos (tokens). La etapa que extrae la estructura de cada sentencia, reconociendo los tokens, es el análisis sintáctico.",
      "difficulty": "básica",
      "category": "verificación de respuestas",
      "metadata": {"tema": "3", "ejercicio": 4}
    },
    {
      "question": "¿Es un compilador la única utilidad necesaria para generar un programa ejecutable, de acuerdo con el Tema 3?",
      "ground_truth": "No, el compilador no es la única utilidad necesaria. También se requieren herramientas como el enlazador y, en algunos casos, el ensamblador y bibliotecas.",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "3", "ejercicio": 3}
    },
    {
      "question": "¿El error 'invalid conversion from 'int' to 'char*'' (ejercicio 6b Tema 3) se produce en la fase de análisis léxico?",
      "ground_truth": "No, el error 'invalid conversion from 'int' to 'char*'' (ejercicio 6b del Tema 3) es un error de tipos que se detecta en la fase de **análisis semántico**.",
      "difficulty": "avanzada",
      "category": "verificación de respuestas",
      "metadata": {"tema": "3", "ejercicio": "6b"}
    },
    {
      "question": "Según el ejercicio 14b del Tema 3, ¿la eliminación de comentarios del código fuente se realiza en la fase de enlazado?",
      "ground_truth": "No, la eliminación de comentarios del código fuente (b) se realiza en la fase de **preprocesado o análisis léxico**, mucho antes del enlazado.",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "3", "ejercicio": "14b"}
    },
    {
      "question": "¿Es el error de un carácter o símbolo no esperado (ejercicio 15b Tema 3) detectado en el análisis sintáctico?",
      "ground_truth": "No, un carácter o símbolo no esperado (ejercicio 15b del Tema 3) se detecta en la fase de **análisis léxico**.",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "3", "ejercicio": "15b"}
    },
    {
      "question": "¿La fase de enlazado de una biblioteca dinámica se realiza durante la compilación, según el ejercicio 14d del Tema 3?",
      "ground_truth": "No, el enlazado de una biblioteca dinámica (d) se realiza en la fase de **ejecución (o carga)** del programa, no durante la compilación.",
      "difficulty": "intermedia",
      "category": "verificación de respuestas",
      "metadata": {"tema": "3", "ejercicio": "14d"}
    },
    {
      "question": "Muestrame el siguiente ejercicio después del ejercicio 1 del Tema 1.",
      "ground_truth": "El ejercicio 2 del Tema 1 es: El método de comunicación de E/S en el que el dispositivo de E/S informa a la CPU en qué momento está preparado el dispositivo para la transferencia de datos se conoce como: (a) E/S Programada. (b) E/S Dirigida por Interrupciones. (c) DMA. (d) E/S a Distancia.",
      "difficulty": "básica",
      "category": "seguimiento",
      "metadata": {"tema": "1", "ejercicio": 2}
    },
    {
      "question": "¿Y la opción (d) del ejercicio 4 del Tema 1?",
      "ground_truth": "La opción (d) del ejercicio 4 del Tema 1 para el puntero de pila (SP) indica: La dirección de memoria donde se encuentra la dirección a donde se ha producido la última llamada a una subrutina.",
      "difficulty": "básica",
      "category": "seguimiento",
      "metadata": {"tema": "1", "ejercicio": "4d"}
    },
    {
      "question": "Dame la parte 9a del Tema 2.",
      "ground_truth": "La parte 9a del Tema 2 pregunta: ¿Es necesario que lo último que haga todo proceso antes de finalizar sea una llamada al sistema para finalizar? ¿Sigue siendo esto cierto en sistemas monoprogramados?.",
      "difficulty": "básica",
      "category": "seguimiento",
      "metadata": {"tema": "2", "ejercicio": "9a"}
    },
    {
      "question": "¿Y el ejercicio 12e del Tema 2?",
      "ground_truth": "El ejercicio 12e del Tema 2 pregunta si modificar la prioridad de un proceso implica un cambio de contexto. Para el procesado de esta llamada al sistema, generalmente, no implica un cambio de contexto directo, ya que solo se actualiza un valor en el descriptor del proceso.",
      "difficulty": "básica",
      "category": "seguimiento",
      "metadata": {"tema": "2", "ejercicio": "12e"}
    },
    {
      "question": "Muestrame la parte b) del ejercicio 15 del Tema 2.",
      "ground_truth": "La parte b) del ejercicio 15 del Tema 2 pregunta: ¿En cuántos marcos de página se divide la memoria física?.",
      "difficulty": "intermedia",
      "category": "seguimiento",
      "metadata": {"tema": "2", "ejercicio": "15b"}
    },
    {
      "question": "¿Y la fase (b) del ejercicio 14 del Tema 3?",
      "ground_truth": "La fase (b) del ejercicio 14 del Tema 3 es: Eliminar los comentarios del código fuente. Esto se realiza en la fase de preprocesado o análisis léxico.",
      "difficulty": "básica",
      "category": "seguimiento",
      "metadata": {"tema": "3", "ejercicio": "14b"}
    },
    {
      "question": "Dame otro ejemplo de error léxico que no derive en error sintáctico, según el ejercicio 7 del Tema 3.",
      "ground_truth": "Un ejemplo de error léxico que no derive en error sintáctico podría ser un carácter no imprimible como '¬' (ejercicio 6c) o una secuencia de caracteres inválida que el analizador léxico no puede convertir en un token válido pero que no afecta la estructura sintáctica de una sentencia cercana.",
      "difficulty": "avanzada",
      "category": "seguimiento",
      "metadata": {"tema": "3", "ejercicio": 7}
    },
    {
      "question": "¿Y si se produce el final de un bloque de sentencias pero no el inicio del mismo, en qué fase se detectaría (ejercicio 15e Tema 3)?",
      "ground_truth": "Si aparece el final de un bloque de sentencias pero no el inicio del mismo (ejercicio 15e del Tema 3), se detectaría en la fase de **análisis sintáctico**.",
      "difficulty": "intermedia",
      "category": "seguimiento",
      "metadata": {"tema": "3", "ejercicio": "15e"}
    },
    {
      "question": "Después del ejercicio 1 del Tema 4, ¿cuál es el siguiente ejercicio de diseño de bases de datos?",
      "ground_truth": "El siguiente ejercicio de diseño de bases de datos después del ejercicio 1 del Tema 4 es el ejercicio 2, que pide diseñar la base de datos de una biblioteca particular.",
      "difficulty": "básica",
      "category": "seguimiento",
      "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
      "question": "¿Qué implicaciones tiene el cambio de estado de Bloqueado a Ejecutable para otros procesos (ejercicio 9e Tema 2)?",
      "ground_truth": "Cuando un proceso cambia de Bloqueado a Ejecutable, puede provocar un cambio de estado en otros procesos. Por ejemplo, si un proceso de mayor prioridad se vuelve ejecutable, podría desalojar a un proceso que estaba Ejecutándose, haciendo que este último pase a Preparado.",
      "difficulty": "avanzada",
      "category": "seguimiento",
      "metadata": {"tema": "2", "ejercicio": "9e"}
    },
    {
      "question": "Dame una pista para resolver el ejercicio 5 del Tema 1.",
      "ground_truth": "Para resolver el ejercicio 5 del Tema 1, debes seguir el ciclo de instrucción (captación, decodificación, ejecución) para cada instrucción, actualizando el registro PC, IR y los registros de propósito general, así como el SP si hay operaciones de pila. Recuerda que la pila crece hacia posiciones menores de memoria.",
      "difficulty": "avanzada",
      "category": "solicitud de pistas",
      "metadata": {"tema": "1", "ejercicio": 5}
    },
    {
      "question": "¿Cómo puedo empezar el ejercicio 7 del Tema 1 sobre interrupciones?",
      "ground_truth": "Para empezar el ejercicio 7 del Tema 1, considera los pasos estándar de manejo de interrupciones: la CPU guarda el contexto del proceso actual (hardware), salta a la rutina de atención de la interrupción (hardware), la rutina de atención resuelve la interrupción (software), y finalmente la CPU restaura el contexto del proceso interrumpido y reanuda su ejecución (hardware).",
      "difficulty": "intermedia",
      "category": "solicitud de pistas",
      "metadata": {"tema": "1", "ejercicio": 7}
    },
    {
      "question": "Necesito una pista para el ejercicio 15 del Tema 2 sobre paginación.",
      "ground_truth": "Para el ejercicio 15 del Tema 2, recuerda que el tamaño de la página se determina por los bits de desplazamiento. Para el número de marcos de página, divide el tamaño de la memoria física entre el tamaño de la página. El tamaño del campo Número de Marco se calcula a partir del número total de marcos.",
      "difficulty": "avanzada",
      "category": "solicitud de pistas",
      "metadata": {"tema": "2", "ejercicio": 15}
    },
    {
      "question": "Dame una pista para resolver la parte a) del ejercicio 16 del Tema 2.",
      "ground_truth": "Para la parte a) del ejercicio 16 del Tema 2, dado el tamaño de página (1024 bytes) y la dirección lógica (999), primero determina el número de página virtual y el desplazamiento. El número de página virtual será el cociente entero de la dirección lógica dividida por el tamaño de página, y el desplazamiento será el resto. Luego, usa la tabla de páginas para encontrar el número de marco de página correspondiente y calcula la dirección física.",
      "difficulty": "avanzada",
      "category": "solicitud de pistas",
      "metadata": {"tema": "2", "ejercicio": "16a"}
    },
    {
      "question": "¿Cómo abordo el ejercicio 19a del Tema 2 sobre el tamaño de página óptimo?",
      "ground_truth": "Para el ejercicio 19a del Tema 2, debes calcular cuántas páginas se necesitaría para cada segmento (código, pila, datos) de cada proceso con cada uno de los dos tamaños de página propuestos. Luego, suma el total de páginas para todos los procesos para cada tamaño de página y multiplica por el tamaño de la página para obtener el espacio total ocupado. El que use menos memoria o sea más eficiente en el uso de marcos disponibles será el más apropiado.",
      "difficulty": "avanzada",
      "category": "solicitud de pistas",
      "metadata": {"tema": "2", "ejercicio": "19a"}
    },
    {
      "question": "Necesito una pista para el ejercicio 22 del Tema 2 sobre direcciones de memoria segmentada.",
      "ground_truth": "Para el ejercicio 22 del Tema 2, para traducir una dirección lógica (nº_segmento, desplazamiento) a física, debes sumar la dirección base del segmento correspondiente al desplazamiento. Asegúrate de que el desplazamiento no exceda la longitud definida para ese segmento, de lo contrario, sería un error.",
      "difficulty": "avanzada",
      "category": "solicitud de pistas",
      "metadata": {"tema": "2", "ejercicio": 22}
    },
    {
      "question": "¿Cómo puedo dar un ejemplo para el ejercicio 6b del Tema 3 sobre errores de conversión?",
      "ground_truth": "Para el ejercicio 6b del Tema 3, que es un error de conversión de 'int' a 'char*', puedes crear un ejemplo simple como `char* ptr; int x = 5; ptr = x;`. El compilador detectará que estás intentando asignar un valor entero a un puntero de carácter sin una conversión explícita o cast, lo cual es un error semántico de tipos.",
      "difficulty": "intermedia",
      "category": "solicitud de pistas",
      "metadata": {"tema": "3", "ejercicio": "6b"}
    },
    {
      "question": "Dame una pista para el ejercicio 8 del Tema 3 (errores léxicos que derivan en sintácticos y semánticos).",
      "ground_truth": "Para el ejercicio 8 del Tema 3, busca un error léxico que haga que la sintaxis de la sentencia sea inválida, y a su vez, que esa sintaxis inválida impida que se determine correctamente el tipo de las operaciones o variables. Por ejemplo, un operador erróneo (léxico) que el analizador sintáctico no pueda interpretar para construir un árbol, y si lo interpretara incorrectamente, el semántico fallaría en la comprobación de tipos.",
      "difficulty": "avanzada",
      "category": "solicitud de pistas",
      "metadata": {"tema": "3", "ejercicio": 8}
    },
    {
      "question": "¿Cómo empiezo a diseñar el modelo ER para el ejercicio 2 del Tema 4 (biblioteca)?",
      "ground_truth": "Para el ejercicio 2 del Tema 4, comienza identificando las entidades principales: Libro, Autor, Editorial. Luego, define los atributos para cada entidad y, finalmente, establece las relaciones entre ellas, prestando atención a la cardinalidad (uno a muchos, muchos a muchos), por ejemplo, un Libro puede tener muchos Autores y un Autor puede escribir muchos Libros.",
      "difficulty": "intermedia",
      "category": "solicitud de pistas",
      "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
      "question": "Quiero una pista para el diseño ER del centro comercial del ejercicio 4 del Tema 4.",
      "ground_truth": "Para el ejercicio 4 del Tema 4, identifica las entidades clave como Cliente, Trabajador (con subtipos Gerente, Jefe, Vendedor), Sección, Producto y Venta. Presta especial atención a las relaciones jerárquicas entre los tipos de trabajadores y cómo se relacionan con las secciones. Recuerda que una venta es una entidad de relación que conecta a un Vendedor, un Cliente y un Producto.",
      "difficulty": "avanzada",
      "category": "solicitud de pistas",
      "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Qué ejercicios del Tema 1 se centran en los métodos de comunicación de E/S?",
        "ground_truth": "Los ejercicios 1 y 2 del Tema 1 tratan sobre los métodos de comunicación de E/S [1-3].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Qué método de comunicación de E/S implica que la CPU espera a que la operación termine?",
        "ground_truth": "El método de comunicación de E/S en el que la CPU está esperando hasta que la operación de E/S ha finalizado se conoce como E/S Programada [1, 4].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 1}
    },
    {
        "question": "¿Cuál es el método de comunicación de E/S donde el dispositivo informa a la CPU cuando está listo para transferir datos?",
        "ground_truth": "El método de comunicación de E/S en el que el dispositivo de E/S informa a la CPU en qué momento está preparado para la transferencia de datos se conoce como E/S Dirigida por Interrupciones [1, 2, 5].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 2}
    },
    {
        "question": "¿Es posible que un programa se ejecute sin estar cargado en la memoria principal, según el ejercicio 3 del Tema 1?",
        "ground_truth": "No, según el ejercicio 3 del Tema 1, un programa, para que se ejecute, debe estar cargado en la memoria principal [2, 6, 7].",
        "difficulty": "básica",
        "category": "verificación de respuestas",
        "metadata": {"tema": "1", "ejercicio": 3}
    },
    {
        "question": "¿Qué función tiene el puntero de pila (SP) en un computador elemental, de acuerdo con el ejercicio 4 del Tema 1?",
        "ground_truth": "Según el ejercicio 4 del Tema 1, el puntero de pila (SP) indica la dirección de memoria donde se encuentra la dirección a donde se ha producido la última llamada a una subrutina [8-11].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 4}
    },
    {
        "question": "¿Qué registros de la CPU se mencionan en la arquitectura del ordenador elemental para el ejercicio 5 del Tema 1?",
        "ground_truth": "Se mencionan tres registros de propósito general, el registro contador de programa (PC) y el registro de instrucción (IR), además del registro SP (Puntero de pila) [12].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 5}
    },
    {
        "question": "¿Cuántos bits serían necesarios para codificar las instrucciones si la arquitectura dispone de 14 instrucciones distintas, según el ejercicio 6 del Tema 1?",
        "ground_truth": "Dado que se necesitan 14 instrucciones distintas, se necesitarían al menos 4 bits para el código de operación (2^3=8, 2^4=16). Así, 4 bits serían necesarios para codificar las instrucciones [13].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 6}
    },
    {
        "question": "¿Quién (software o hardware) es responsable de guardar el contexto del proceso actual cuando se produce una interrupción, según el ejercicio 7 del Tema 1?",
        "ground_truth": "El hardware es el responsable de guardar el contexto del proceso actual cuando se produce una interrupción [14-16].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 7}
    },
    {
        "question": "¿Cuál es la dirección de inicio de la rutina de tratamiento de la interrupción en el ejercicio 7 del Tema 1?",
        "ground_truth": "La rutina de tratamiento de la interrupción comienza en la dirección de memoria principal 56 [15].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 7}
    },
    {
        "question": "¿Qué diferencia hay entre una interrupción y una excepción, según el ejercicio 8 del Tema 1?",
        "ground_truth": "Generalmente, una interrupción es un evento asíncrono generado externamente (por hardware), mientras que una excepción es un evento síncrono generado internamente por la CPU debido a una condición de error o instrucción especial [6, 9].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 8}
    },
    {
        "question": "¿Cuál es el tamaño de la memoria principal en palabras para el ordenador del ejercicio 9 del Tema 1?",
        "ground_truth": "La memoria principal dispone de 512 palabras [15].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 9}
    },
    {
        "question": "¿Cómo se describe la instrucción MOVER en el ejercicio 6 del Tema 1?",
        "ground_truth": "La instrucción MOVER Orig,Dest copia el valor del origen (Orig) al destino (Dest) [13].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 6}
    },
    {
        "question": "¿Qué significa que la pila 'crece hacia posiciones menores de memoria' en el ejercicio 4 del Tema 1?",
        "ground_truth": "Significa que a medida que se añaden elementos a la pila, la dirección del puntero de pila (SP) disminuye [12, 16].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 4}
    },
    {
        "question": "¿Qué tipo de operación es 'IN Pi, Dest' en la descripción de instrucciones del ejercicio 6 del Tema 1?",
        "ground_truth": "IN Pi, Dest es una operación que lee del Puerto (Pi) y lo deposita en el destino (Dest) [13].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 6}
    },
    {
        "question": "¿Qué se entiende por 'estado actual de la CPU' en el contexto del ejercicio 5 del Tema 1?",
        "ground_truth": "El 'estado actual de la CPU' se refiere a los valores en un momento dado de los registros internos del procesador, como los registros de propósito general, el Contador de Programa (PC), el Registro de Instrucción (IR) y el Puntero de Pila (SP) [12].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 5}
    },
    {
        "question": "¿Podría reducirse el espacio que ocupa en memoria el tamaño del código de un proceso para optimizar el espacio de memoria, según el ejercicio 1 del Tema 2?",
        "ground_truth": "No, según el ejercicio 1 del Tema 2, el tamaño del código (d) de un proceso no puede reducirse para optimizar el espacio de memoria una vez que ya ha sido atendido en un 50%, ya que es el código que se está ejecutando y es esencial para la finalización del proceso [10, 17].",
        "difficulty": "avanzada",
        "category": "verificación de respuestas",
        "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
        "question": "¿Por qué se informa de un error en la ejecución cuando un proceso intenta acceder a memoria fuera de su área asignada?",
        "ground_truth": "Se informa de un error porque el acceso a direcciones de memoria fuera del área asignada a un proceso es una violación de la protección de memoria, diseñada para evitar que un proceso interfiera con otros procesos o con el sistema operativo [17, 18]. El Sistema Operativo, a menudo asistido por la Unidad de Gestión de Memoria (MMU) del hardware, es quien informa de ello [17, 19].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 2}
    },
    {
        "question": "¿Tiene sentido un modelo de 5 estados de los procesos en un SO monousuario?",
        "ground_truth": "Los documentos no proporcionan una respuesta directa a si tiene sentido un modelo de 5 estados en un SO monousuario [17]. Sin embargo, se podría inferir que, al haber un solo usuario, la complejidad de 5 estados podría ser excesiva si solo un proceso se ejecuta a la vez.",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 3}
    },
    {
        "question": "Si un proceso en modo 'ejecutándose' accede a una dirección de memoria fuera del área asignada, ¿a qué modo pasaría dicho proceso?",
        "ground_truth": "Si un proceso en modo 'ejecutándose' accede a una dirección de memoria fuera de su área asignada, se produciría un error en la ejecución y dicho proceso pasaría a modo 'Finalizado' [18, 20].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 4}
    },
    {
        "question": "¿Es necesario un planificador de procesos en un SO monoprogramado? Razone la respuesta.",
        "ground_truth": "No, no tiene sentido disponer de un planificador de procesos en un SO monoprogramado porque solo se ejecuta un proceso a la vez y no hay necesidad de gestionar la asignación de la CPU entre múltiples procesos [18, 21].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 5}
    },
    {
        "question": "¿En un SO multiprogramado, bajo qué circunstancias no sería necesario un planificador de procesos?",
        "ground_truth": "En un SO multiprogramado, solo se podría prescindir del planificador de procesos si solo hubiera un único proceso ejecutable en todo momento, o si la asignación de la CPU estuviera rígidamente predeterminada sin necesidad de decisiones dinámicas [18].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 6}
    },
    {
        "question": "¿Qué operaciones del ejercicio 7 del Tema 2 requieren modo supervisor?",
        "ground_truth": "Operaciones como cambiar la fecha del sistema, leer una pista/sector de un disco magnético, modificar la dirección de un vector de la tabla de vectores de interrupción y deshabilitar las interrupciones pueden realizarse únicamente en modo supervisor [22, 23].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 7}
    },
    {
        "question": "¿Por qué es importante el modo supervisor/usuario incluso en sistemas monousuario?",
        "ground_truth": "La existencia de los modos de funcionamiento supervisor/usuario es crucial para proteger el sistema operativo y los recursos hardware de posibles errores o acciones maliciosas del programa de usuario, garantizando la estabilidad y seguridad del sistema [22-24].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 8}
    },
    {
        "question": "¿Cuando el controlador de un dispositivo produce una interrupción, ¿se produce necesariamente un cambio de contexto?",
        "ground_truth": "Sí, cuando el controlador de un dispositivo produce una interrupción, se produce necesariamente un cambio de contexto para que el Sistema Operativo pueda atender la interrupción [24, 25].",
        "difficulty": "intermedia",
        "category": "verificación de respuestas",
        "metadata": {"tema": "2", "ejercicio": "9b"}
    },
    {
        "question": "¿Puede el cambio de Ejecutándose a Bloqueado provocar un cambio de estado en otros procesos?",
        "ground_truth": "Sí, un proceso que cambia de Ejecutándose a Bloqueado libera la CPU, lo que puede provocar que el planificador seleccione otro proceso para ejecutarse, haciendo que este último pase de Preparado a Ejecutándose [26].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "9d"}
    },
    {
        "question": "¿Qué implicaciones tenía la ausencia de DMA para la multiprogramación en los primeros ordenadores?",
        "ground_truth": "La ausencia de DMA implicaba que la CPU manejaba directamente cada byte de datos leído o escrito, manteniéndola ocupada con operaciones de E/S. Esto reducía drásticamente la eficiencia y el rendimiento de la multiprogramación, ya que la CPU no podía realizar tareas computacionales mientras esperaba por E/S [26, 27].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 10}
    },
    {
        "question": "¿Cuáles son las ventajas de que el intérprete de órdenes (shell) no sea parte del propio sistema operativo (kernel)?",
        "ground_truth": "La principal ventaja es la flexibilidad y personalización. Permite a los usuarios modificar o reemplazar el shell sin afectar el núcleo del sistema operativo, facilitando el desarrollo de nuevas versiones y una mayor adaptabilidad [26, 28, 29].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 11}
    },
    {
        "question": "¿Qué implica para el sistema operativo el procesamiento de la llamada al sistema 'Suspender o bloquear un proceso'?",
        "ground_truth": "Suspender o bloquear un proceso implica un cambio de contexto, ya que el estado del proceso actual debe guardarse y se debe cargar el contexto de otro proceso (o del sistema operativo) para que este pueda ejecutarse [25, 30].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "12c"}
    },
    {
        "question": "¿Tiene sentido mantener ordenada por prioridades la cola de procesos bloqueados? Si lo tuviera, ¿en qué casos sería útil?",
        "ground_truth": "No, generalmente no tiene sentido mantener ordenada por prioridades la cola de procesos bloqueados, ya que el orden de su activación depende de la ocurrencia de eventos externos, no de su prioridad. Solo podría ser útil si el evento que los desbloquea se puede priorizar, pero esto es raro [31, 32].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 13}
    },
    {
        "question": "¿Por qué se utilizan potencias de dos para los tamaños de página en la gestión de memoria paginada?",
        "ground_truth": "Se utilizan potencias de dos para los tamaños de página (y números de páginas/marcos) para la eficiencia en el direccionamiento de memoria. Permite que las operaciones de división y multiplicación necesarias para calcular direcciones físicas (número de página y desplazamiento) se realicen mediante operaciones de bits (desplazamientos), que son mucho más rápidas para el hardware [31, 33].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 14}
    },
    {
        "question": "En un sistema paginado con dirección lógica de 32 bits y 22 bits para el número de página, ¿qué tamaño tiene cada página?",
        "ground_truth": "Si una dirección lógica ocupa 32 bits y los 22 de la izquierda son el número de página, los 10 de la derecha son el desplazamiento. Por lo tanto, el tamaño de cada página es 2^10 bytes, es decir, 1024 bytes [5, 19, 31].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "15a"}
    },
    {
        "question": "En el ejercicio 15 del Tema 2, si la memoria física tiene 16 Mbytes y cada página es de 1024 bytes, ¿en cuántos marcos de página se divide la memoria física?",
        "ground_truth": "La memoria física de 16 Mbytes (16 * 1024 * 1024 bytes) dividida por el tamaño de página de 1024 bytes da un total de 16384 marcos de página [19, 31, 34].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "15b"}
    },
    {
        "question": "Con los datos del ejercicio 16 del Tema 2, ¿qué dirección física corresponde a la dirección lógica 2121?",
        "ground_truth": "Con tamaño de página 1024 bytes: Dirección lógica 2121 -> Número de página virtual = 2121 / 1024 = 2 (cociente entero). Desplazamiento = 2121 % 1024 = 73. Según la tabla, la página virtual 2 corresponde al marco de página 1. Dirección física = (Número de marco * Tamaño de página) + Desplazamiento = (1 * 1024) + 73 = 1097 [35-37].",
        "difficulty": "avanzada",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "16b"}
    },
    {
        "question": "¿Qué tipo de fragmentación se produce en un sistema de gestión de memoria paginado y cómo se puede minimizar?",
        "ground_truth": "Se produce fragmentación interna, que es el espacio no utilizado dentro de la última página asignada a un proceso. Se puede minimizar utilizando tamaños de página más pequeños (aumentando el tamaño de la tabla de páginas) o técnicas como la paginación por demanda [35, 38, 39].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 17}
    },
    {
        "question": "Dada la dirección lógica 2453 y páginas de 1024 palabras, ¿cuál es el par (número de página, desplazamiento)?",
        "ground_truth": "Número de página = 2453 / 1024 = 2. Desplazamiento = 2453 % 1024 = 405. El par es (2, 405) [38].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "18a"}
    },
    {
        "question": "¿Cuántas Tablas de Páginas habrá en el sistema del ejercicio 19 del Tema 2 y cuántas entradas en cada una?",
        "ground_truth": "Habrá 3 Tablas de Páginas (una por cada proceso). El número de entradas en cada tabla depende del tamaño del espacio lógico de cada proceso y del tamaño de página elegido. Por ejemplo, si se elige 4096 bytes como tamaño de página, para el Proceso A (20480+14288+10240=45008 bytes), se necesitarían 45008/4096 = 11.02, es decir, 12 páginas. Por lo tanto, 12 entradas [40, 41].",
        "difficulty": "avanzada",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "19c"}
    },
    {
        "question": "¿Qué estructuras de datos necesita mantener el SO para administrar el espacio libre en un sistema paginado?",
        "ground_truth": "El Sistema Operativo necesitará mantener una lista de marcos de página libres (free-frame list) o un mapa de bits (bitmap) para saber qué marcos de memoria física están disponibles [42, 43].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 20}
    },
    {
        "question": "Calcula la fragmentación interna provocada para un proceso que necesita 31.566 posiciones de memoria con páginas de 2.048 bytes.",
        "ground_truth": "Número de páginas necesarias = ceil(31.566 / 2.048) = ceil(15.41) = 16 páginas. Espacio total asignado = 16 * 2.048 = 32.768 bytes. Fragmentación interna = 32.768 - 31.566 = 1.202 bytes [42, 44].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": 21}
    },
    {
        "question": "En la tabla de segmentos del ejercicio 22 del Tema 2, ¿qué dirección física corresponde a la dirección lógica (1, 10)?",
        "ground_truth": "Para la dirección lógica (1, 10): Segmento 1 tiene dirección base 2300 y longitud 14. El desplazamiento 10 es menor que la longitud 14. Dirección física = dirección base + desplazamiento = 2300 + 10 = 2310 [44-46].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "22b"}
    },
    {
        "question": "¿Qué cambio de contexto tardará menos: entre dos hebras del mismo proceso o entre dos hebras de distintos procesos? ¿Por qué?",
        "ground_truth": "El cambio de contexto producido entre dos hebras del mismo proceso tardará menos porque comparten el mismo espacio de direcciones y la mayoría de su información de contexto, lo que reduce la cantidad de datos que el sistema operativo debe guardar y restaurar [44, 47].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 23}
    },
    {
        "question": "¿Es necesario que lo último que haga un proceso antes de finalizar sea una llamada al sistema para terminar?",
        "ground_truth": "Sí, es necesario que lo último que haga todo proceso antes de finalizar sea una llamada al sistema para terminar su ejecución y liberar sus recursos. Esto sigue siendo cierto en sistemas monoprogramados [48-50].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "9a"}
    },
    {
        "question": "¿En qué modo puede un procesador (CPU) interpretar y ejecutar directamente las instrucciones de un programa?",
        "ground_truth": "Un procesador (CPU) puede interpretar y ejecutar directamente las instrucciones de un programa solo en **lenguaje máquina** [51-53].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 1}
    },
    {
        "question": "¿Es lo mismo un token que un lexema? Muestre algún ejemplo.",
        "ground_truth": "No, no son lo mismo. Un **lexema** es la secuencia de caracteres en el programa fuente que coincide con un patrón para un token (ej. 'int', 'main', 'i', '=='). Un **token** es la unidad léxica con significado que el analizador léxico produce, representando la categoría del lexema (ej. PALABRA_RESERVADA_INT, IDENTIFICADOR, OPERADOR_IGUALDAD) [29, 51].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 2}
    },
    {
        "question": "¿Es el compilador la única utilidad necesaria para generar un programa ejecutable en una computadora?",
        "ground_truth": "No, el compilador no es la única utilidad necesaria. También se requieren otras herramientas como el ensamblador (si el código intermedio es ensamblador) y, crucialmente, el enlazador (linker) para combinar los módulos objeto y las bibliotecas en un ejecutable final [54, 55].",
        "difficulty": "intermedia",
        "category": "verificación de respuestas",
        "metadata": {"tema": "3", "ejercicio": 3}
    },
    {
        "question": "¿Cuál es el objetivo principal del análisis léxico en la compilación?",
        "ground_truth": "El objetivo principal del análisis léxico es descomponer el programa fuente en sus componentes léxicos, conocidos como tokens [54, 56-58].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 4}
    },
    {
        "question": "¿Qué fase de la compilación extrae la estructura de cada sentencia reconociendo los tokens?",
        "ground_truth": "La fase de la compilación cuyo objetivo es extraer la estructura de cada sentencia, reconociendo los componentes léxicos (tokens) del lenguaje, es el análisis sintáctico [53, 54, 57].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 5}
    },
    {
        "question": "¿En qué fase del compilador se produce el error 'expected primary-expression before ‘;’ token' del ejercicio 6a del Tema 3 y cuál es su naturaleza?",
        "ground_truth": "Este error (a) se produce en la fase de **análisis sintáctico**. Su naturaleza es que se esperaba una expresión antes del punto y coma, indicando una construcción gramatical incompleta o incorrecta [32, 56].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "3", "ejercicio": "6a"}
    },
    {
        "question": "¿En qué fase del compilador se produce el error 'invalid conversion from 'int' to 'char*'' del ejercicio 6b del Tema 3 y cuál es su naturaleza?",
        "ground_truth": "Este error (b) se produce en la fase de **análisis semántico**. Su naturaleza es una incompatibilidad de tipos: se intenta asignar un valor entero a un puntero de carácter sin una conversión explícita válida [59, 60].",
        "difficulty": "avanzada",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "3", "ejercicio": "6b"}
    },
    {
        "question": "¿En qué fase del compilador se produce el error 'stray ‘/302’ in program' del ejercicio 6c del Tema 3 y cuál es su naturaleza?",
        "ground_truth": "Este error (c) se produce en la fase de **análisis léxico**. Su naturaleza es la presencia de un carácter extraño o no reconocido por el analizador léxico [59].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "3", "ejercicio": "6c"}
    },
    {
        "question": "Proporcione un ejemplo de C++ donde un error léxico no derive en un error sintáctico, como se pide en el ejercicio 7 del Tema 3.",
        "ground_truth": "Un ejemplo de error léxico que no derive en error sintáctico podría ser un carácter no imprimible como '¬' o un símbolo inválido dentro de un comentario, como `// Esto es un coment@rio`. El analizador léxico podría ignorar el error al estar dentro de un comentario, sin afectar la estructura sintáctica del resto del código [61, 62].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 7}
    },
    {
        "question": "Proporcione un ejemplo de C++ donde un error léxico derive en errores sintácticos y semánticos, como se pide en el ejercicio 8 del Tema 3.",
        "ground_truth": "Un ejemplo podría ser `int x = 5 @ 3;`. El `@` es un error léxico (carácter no reconocido). El analizador sintáctico no puede formar una expresión válida con `@` (error sintáctico). Si el sintáctico pudiera formar algo, el semántico fallaría en la comprobación de tipos porque `@` no tiene un significado de operación numérica (error semántico) [63, 64].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 8}
    },
    {
        "question": "¿Sería siempre posible depurar un archivo objeto si se ha eliminado toda la información de depuración?",
        "ground_truth": "No, no sería siempre posible depurar un archivo objeto de forma efectiva si se ha eliminado toda la información de depuración. Sin esta información, es muy difícil relacionar el código máquina con el código fuente original o entender el estado de las variables [59].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 9}
    },
    {
        "question": "¿Qué se debe hacer con un programa escrito en lenguaje ensamblador para que sea interpretable por la computadora?",
        "ground_truth": "Un programa en lenguaje ensamblador no es directamente interpretable por la computadora. Debe ser traducido a lenguaje máquina por un **ensamblador** antes de su ejecución [53, 61, 65].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 10}
    },
    {
        "question": "¿Cuándo no es necesario usar el enlazador para obtener un programa ejecutable?",
        "ground_truth": "El enlazador no sería necesario si el programa completo reside en un único archivo objeto y no hace referencia a funciones o datos externos definidos en otras bibliotecas o módulos [65, 66].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 11}
    },
    {
        "question": "¿Cuál es la ventaja de una biblioteca dinámica frente a una estática si se modifica la biblioteca?",
        "ground_truth": "Si se modifica una biblioteca dinámica, no es necesario recompilar ni reenlazar el código fuente del programa que la utiliza, ya que la vinculación se realiza en tiempo de ejecución. Con una biblioteca estática, cualquier cambio requeriría reenlazar el programa [67, 68].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 13}
    },
    {
        "question": "¿En qué fase se realiza la eliminación de comentarios del código fuente?",
        "ground_truth": "La eliminación de comentarios del código fuente se realiza en la fase de **preprocesado** o en la de **análisis léxico** [62, 67, 69].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "14b"}
    },
    {
        "question": "¿En qué fase se detecta un mensaje de error de que una variable no ha sido declarada?",
        "ground_truth": "Un mensaje de error de que una variable no ha sido declarada se detecta en la fase de **análisis semántico** de la compilación [67, 70, 71].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "14c"}
    },
    {
        "question": "¿En qué fase se enlaza una biblioteca dinámica?",
        "ground_truth": "El enlazado de una biblioteca dinámica se realiza en la fase de **ejecución (o carga)** del programa [67, 72, 73].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "14d"}
    },
    {
        "question": "¿En qué fase de la compilación se detectaría un error donde aparecen dos identificadores consecutivos?",
        "ground_truth": "Un error donde aparecen dos identificadores consecutivos (sin un operador o separador válido entre ellos) se detectaría en la fase de **análisis sintáctico** [74, 75].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "15c"}
    },
    {
        "question": "¿En qué fase de la compilación se detectaría si aparecen dos funciones denominadas bajo el mismo nombre (si esto no está permitido por el lenguaje)?",
        "ground_truth": "Si el lenguaje no permite la sobrecarga de funciones o si las firmas son idénticas, este error se detectaría en la fase de **análisis semántico** o, si las definiciones están en módulos separados, en la fase de **enlazado** [74].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "15d"}
    },
    {
        "question": "¿En qué fase de la compilación se detectaría un error si aparece el final de un bloque de sentencias sin su inicio correspondiente?",
        "ground_truth": "Si aparece el final de un bloque de sentencias pero no el inicio del mismo, se detectaría en la fase de **análisis sintáctico** [74, 76].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "15e"}
    },
    {
        "question": "¿Puede un error sintáctico no originar un error semántico? Demuéstralo.",
        "ground_truth": "Sí, no todo error sintáctico origina un error semántico. Por ejemplo, en C++, olvidar un punto y coma al final de una sentencia (`int x = 5 ` en lugar de `int x = 5;`) es un error sintáctico. La sentencia en sí (x=5) tiene un significado semántico válido, pero la estructura del programa es incorrecta sintácticamente [33, 77].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 16}
    },
    {
        "question": "¿Cuál es la tarea principal del ejercicio 1 del Tema 4 sobre bases de datos?",
        "ground_truth": "El ejercicio 1 del Tema 4 solicita diseñar un esquema relacional de una base de datos para un centro de enseñanza, partiendo de un modelo ER y luego reduciéndolo a tablas [71, 78].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 1}
    },
    {
        "question": "¿Qué datos adicionales, aparte del título y el ISBN, se deben almacenar para cada libro en el diseño de la base de datos de una biblioteca (ejercicio 2 Tema 4)?",
        "ground_truth": "Para cada libro se debe almacenar su número de páginas, materia, año de edición, editorial y autor o autores [79, 80].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
        "question": "¿Qué entidades principales se identificarían para el modelo ER de la biblioteca del ejercicio 2 del Tema 4?",
        "ground_truth": "Las entidades principales serían Libro, Autor y Editorial [79, 81].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
        "question": "¿Cuál es una de las restricciones de cardinalidad para la base de datos de la Universidad en el ejercicio 3 del Tema 4, relacionada con asignaturas y carreras?",
        "ground_truth": "Una de las restricciones es que una asignatura sólo puede pertenecer a una carrera [82, 83].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 3}
    },
    {
        "question": "¿Qué tipos de trabajadores se consideran en el diseño de la base de datos del centro comercial (ejercicio 4 Tema 4)?",
        "ground_truth": "Se consideran tres tipos de trabajadores: gerentes, jefes y vendedores [84, 85].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Cómo se modela la restricción 'Una venta la realiza un vendedor a un cliente y debe quedar constancia del artículo vendido' en un modelo ER para el ejercicio 4 del Tema 4?",
        "ground_truth": "Esta restricción implica una entidad de relación `Venta` que conecta a las entidades `Vendedor`, `Cliente` y `Producto`, registrando los detalles de la transacción [47, 84, 86].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Qué es un esquema relacional y cómo se relaciona con el modelo ER?",
        "ground_truth": "Un esquema relacional es la representación lógica de una base de datos, donde los datos se organizan en tablas. Se obtiene a partir de un modelo ER mediante un proceso de mapeo que transforma entidades y relaciones en tablas, atributos en columnas, y define claves primarias y foráneas [43, 78].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": null}
    },
    {
        "question": "¿Qué información sobre los alumnos se desea almacenar en el ejercicio 1 del Tema 4?",
        "ground_truth": "Para los alumnos se desea almacenar el DNI, nombre, dirección, entre otros posibles datos [78].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 1}
    },
    {
        "question": "¿Cómo se modelaría la relación 'Un alumno puede estar matriculado en muchas asignaturas' en un esquema relacional, según el ejercicio 3 del Tema 4?",
        "ground_truth": "Esta relación de muchos a muchos se modelaría con una tabla intermedia, por ejemplo, `Matriculas`, que contendría claves foráneas que referencien al alumno y a la asignatura [21, 82].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 3}
    },
    {
        "question": "¿Un determinado producto puede encontrarse en varias secciones de un centro comercial, según el ejercicio 4 del Tema 4?",
        "ground_truth": "No, según las restricciones del ejercicio 4 del Tema 4, un determinado producto sólo se encuentra en una sección [84].",
        "difficulty": "básica",
        "category": "verificación de respuestas",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Quién tiene a su cargo a un cierto número de jefes en el modelo de centro comercial del ejercicio 4 del Tema 4?",
        "ground_truth": "Un gerente tiene a su cargo a un cierto número de jefes [84].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Cuál es la principal restricción para las ventas en el ejercicio 4 del Tema 4?",
        "ground_truth": "La principal restricción es que 'Sólo un artículo por apunte de venta' [47].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Cómo puedo empezar el diseño del modelo ER para la Universidad del ejercicio 3 del Tema 4?",
        "ground_truth": "Para el ejercicio 3 del Tema 4, puedes empezar identificando las entidades principales: Alumno, Asignatura y Carrera. Luego, define los atributos para cada una y establece las relaciones con las cardinalidades dadas (ej. Alumno-Matricula-Asignatura (N:M), Asignatura-Carrera (N:1)) [21, 43, 82].",
        "difficulty": "intermedia",
        "category": "solicitud de pistas",
        "metadata": {"tema": "4", "ejercicio": 3}
    },
    {
        "question": "¿Cómo se modelarían los jefes y vendedores que solo pueden pertenecer a una única sección en el ejercicio 4 del Tema 4?",
        "ground_truth": "Esto se modelaría añadiendo una clave foránea `id_seccion` en las tablas de `Jefes` y `Vendedores` que referencie a la tabla `Secciones` [84].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Cuántas instrucciones distintas tiene el lenguaje máquina de la arquitectura en el ejercicio 6 del Tema 1?",
        "ground_truth": "El lenguaje máquina dispone de 14 instrucciones distintas [13].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 6}
    },
    {
        "question": "¿Qué tipo de lenguaje puede interpretar un procesador (CPU) directamente, entre las opciones del ejercicio 1 del Tema 3?",
        "ground_truth": "De las opciones dadas, un procesador (CPU) puede interpretar y ejecutar directamente las instrucciones de un programa solo en **lenguaje máquina** [51-53].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 1}
    },
    {
        "question": "¿Qué ejercicios del Tema 3 se centran en las fases del proceso de traducción y ejecución de un programa?",
        "ground_truth": "Los ejercicios del Tema 3 que abordan las fases de la compilación y enlazado son el 4, 5, 14 y 15 [54, 67, 74, 87].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "3", "ejercicio": null}
    },
    {
        "question": "¿Cómo influye el tamaño de página elegido en el formato de cada entrada de la Tabla de Páginas, según el ejercicio 19b del Tema 2?",
        "ground_truth": "El tamaño de página determina cuántos bits se necesitan para el campo de desplazamiento dentro de una dirección lógica. Esto, a su vez, afecta al número de bits necesarios para el número de marco de página y, por ende, al formato total de la entrada de la Tabla de Páginas [40].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "19b"}
    },
    {
        "question": "¿Qué papel juega el software en la resolución del tratamiento de una interrupción, según el ejercicio 7 del Tema 1?",
        "ground_truth": "El software (la rutina de tratamiento de la interrupción) es responsable de identificar la causa de la interrupción, realizar las acciones necesarias para atenderla y resolverla, y restaurar el estado del sistema o del dispositivo [14-16].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 7}
    },
    {
        "question": "¿Qué se pide en la parte c) del ejercicio 15 del Tema 2 respecto a la Tabla de Páginas?",
        "ground_truth": "Se pide el tamaño que deberá tener el campo 'Número de Marco' de la Tabla de Páginas [19, 34].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "15c"}
    },
    {
        "question": "¿En qué se diferencian las fases de análisis léxico y análisis sintáctico en la compilación?",
        "ground_truth": "El análisis léxico descompone el programa fuente en tokens, mientras que el análisis sintáctico agrupa esos tokens para construir la estructura gramatical del programa (ej. árbol sintáctico), verificando que la secuencia de tokens es válida según las reglas del lenguaje [53, 54, 56, 57].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 4}
    },
    {
        "question": "¿Qué ocurriría si un proceso intentara acceder a una dirección de memoria más allá de la 'longitud' de su segmento asignado, en un sistema de memoria segmentada?",
        "ground_truth": "Se produciría un error de violación de segmento o fallo de protección, ya que el proceso estaría intentando acceder a una zona de memoria fuera de su área permitida [44, 88].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 22}
    },
    {
        "question": "¿Qué información de contexto de un proceso se incluye en la figura del ejercicio 1 del Tema 2?",
        "ground_truth": "Se muestra el Código, la Pila y los Datos del proceso, con sus respectivos tamaños en KB [30, 60, 89].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
        "question": "¿Por qué el enlazador es una utilidad necesaria en la generación de un programa ejecutable?",
        "ground_truth": "El enlazador es necesario porque combina diferentes módulos de código objeto (compilados por separado) y bibliotecas para resolver referencias a símbolos externos y funciones, creando un único archivo ejecutable que puede ser cargado y ejecutado [65, 66].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 11}
    },
    {
        "question": "¿Cuál es la función del registro de instrucción (IR) en un procesador?",
        "ground_truth": "Aunque no se define explícitamente, el Registro de Instrucción (IR) se utiliza para almacenar la instrucción que la CPU está ejecutando actualmente, una vez ha sido captada de memoria [12, 15, 24].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Qué implicaciones tiene que un programa ejecutable requiera una biblioteca dinámica si se modifica la biblioteca?",
        "ground_truth": "La principal implicación es que no se necesita recompilar el programa fuente si se modifica la biblioteca, lo que facilita el mantenimiento y las actualizaciones. La biblioteca se carga y enlaza en tiempo de ejecución [67, 68].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 13}
    },
    {
        "question": "¿Qué es la Tabla de Páginas en un sistema paginado?",
        "ground_truth": "La Tabla de Páginas es una estructura de datos que el Sistema Operativo mantiene para cada proceso en un sistema paginado, que mapea las páginas virtuales de un proceso a los marcos de página físicos en la memoria real [19, 35].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": null}
    },
    {
        "question": "¿Qué se necesita para codificar la instrucción SUMAR R0,R1,R2 en el ejercicio 6 del Tema 1, asumiendo 14 instrucciones distintas y 3 registros de propósito general?",
        "ground_truth": "Se necesitan 4 bits para el código de operación (14 instrucciones). Para 3 registros (R0, R1, R2), se necesitan 2 bits por registro (2^1=2, 2^2=4). Por lo tanto, 4 bits (opcode) + 2 bits (R0) + 2 bits (R1) + 2 bits (R2) = 10 bits [13].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 6}
    },
    {
        "question": "¿Qué se necesita para codificar la instrucción MOVER 20,R0 en el ejercicio 6 del Tema 1, asumiendo 14 instrucciones distintas y 3 registros de propósito general?",
        "ground_truth": "Se necesitan 4 bits para el código de operación (14 instrucciones). Para el registro R0 se necesitan 2 bits. Para el valor inmediato '20', se necesitarían al menos 5 bits (2^4=16, 2^5=32). Por lo tanto, 4 bits (opcode) + 5 bits (valor 20) + 2 bits (R0) = 11 bits, asumiendo que el campo para el valor inmediato tiene un tamaño fijo [13].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 6}
    },
    {
        "question": "¿En qué fase se detectaría un error si la palabra reservada 'main' aparece como 'mai¿n' (ejercicio 15h Tema 3)?",
        "ground_truth": "Este error se detectaría en la fase de **análisis léxico**, ya que 'mai¿n' no sería reconocido como un token válido por el analizador léxico [37, 77].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "15h"}
    },
    {
        "question": "¿Es la opción (a) del ejercicio 7 del Tema 2 ('Consultar la hora del sistema') una operación que puede realizarse únicamente en modo supervisor?",
        "ground_truth": "No, consultar la hora del sistema (a) no requiere modo supervisor. Es una operación que puede realizarse también en modo usuario [22, 90].",
        "difficulty": "básica",
        "category": "verificación de respuestas",
        "metadata": {"tema": "2", "ejercicio": "7a"}
    },
    {
        "question": "¿El cambio de estado de 'Bloqueado a Ejecutable' puede afectar el estado de otros procesos? ¿En qué casos?",
        "ground_truth": "Sí, cuando un proceso cambia de Bloqueado a Ejecutable, puede provocar un cambio de estado en otros procesos. Por ejemplo, si un proceso de mayor prioridad se vuelve ejecutable, podría desalojar a un proceso que estaba Ejecutándose, haciendo que este último pase a Preparado [91].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "9e"}
    },
    {
        "question": "¿Qué es la multiprogramación en el contexto de los sistemas operativos?",
        "ground_truth": "La multiprogramación es la capacidad de un sistema operativo para mantener varios programas en la memoria principal y ejecutar partes de ellos concurrentemente, alternando la CPU entre ellos para maximizar su utilización [18, 26].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": null}
    },
    {
        "question": "¿En qué consiste la 'información del contexto del proceso' mencionada en el ejercicio 1 del Tema 2?",
        "ground_truth": "La información del contexto de un proceso incluye los datos y el código del proceso, además de los valores de los registros de la CPU, el estado del proceso, la información de gestión de memoria, y cualquier otro dato necesario para que el sistema operativo pueda restaurar su ejecución en un momento dado [21, 89].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
        "question": "¿Qué implicaciones de diseño tiene el hecho de que la memoria principal del ordenador elemental del ejercicio 4 del Tema 1 tenga 256 palabras?",
        "ground_truth": "Implica que las direcciones de memoria necesitarán al menos 8 bits para ser representadas (2^8 = 256). También limita el tamaño máximo de los programas y datos que pueden residir en memoria simultáneamente [12, 55].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 4}
    },
    {
        "question": "¿Cuál es el propósito del campo 'Protección' en la Tabla de Páginas del ejercicio 15d del Tema 2?",
        "ground_truth": "El campo 'Protección' de 1 bit (1=Sólo lectura; 0=Cualquier tipo de acceso) se utiliza para controlar los permisos de acceso a la memoria física mapeada por ese marco de página, implementando la protección de memoria para evitar accesos no autorizados [19, 57].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "15d"}
    },
    {
        "question": "¿Cómo se calcula la dirección física para una dirección lógica en un sistema de memoria segmentada?",
        "ground_truth": "Para calcular la dirección física de una dirección lógica (nº_segmento, desplazamiento) en un sistema segmentado, se suma la dirección base del segmento correspondiente con el desplazamiento, siempre que el desplazamiento no exceda la longitud del segmento [44, 88].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 22}
    },
    {
        "question": "¿Qué tipo de operaciones de E/S se plantean en los ejercicios 1 y 2 del Tema 1?",
        "ground_truth": "Se plantean la E/S Programada y la E/S Dirigida por Interrupciones [1, 2].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Es el lenguaje ensamblador directamente interpretable por un procesador, como se plantea en el ejercicio 1 del Tema 3?",
        "ground_truth": "No, el lenguaje ensamblador no es directamente interpretable. Requiere ser traducido a lenguaje máquina por un ensamblador [51, 53].",
        "difficulty": "básica",
        "category": "verificación de respuestas",
        "metadata": {"tema": "3", "ejercicio": 1}
    },
    {
        "question": "¿Por qué es importante el Contador de Programa (PC) en la ejecución de un programa?",
        "ground_truth": "El Contador de Programa (PC) es crucial porque almacena la dirección de memoria de la siguiente instrucción a ejecutar, controlando el flujo de ejecución del programa [12].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Qué ocurre si un proceso en modo 'ejecutándose' intenta generar una interrupción software?",
        "ground_truth": "Generar una interrupción software es una operación que puede realizarse también en modo usuario [22]. No se informa de un error por intentar hacerlo. La interrupción sería procesada por el sistema operativo.",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "7d"}
    },
    {
        "question": "¿Qué se pide en la parte (a) del ejercicio 14 del Tema 3 sobre enlazar una biblioteca estática?",
        "ground_truth": "Se pide indicar en qué fase del proceso de traducción y ejecución de un programa se realizará el enlazado de una biblioteca estática [67, 92].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "3", "ejercicio": "14a"}
    },
    {
        "question": "¿En qué fase se detectaría un error de que una variable no está definida (ejercicio 15a Tema 3)?",
        "ground_truth": "Un error de que una variable no está definida se detectaría en la fase de **análisis semántico** de la compilación [70, 71, 74].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "15a"}
    },
    {
        "question": "¿Qué se pide en el apartado b) del ejercicio 2 del Tema 4?",
        "ground_truth": "Se pide obtener, a partir del esquema conceptual, las tablas que se tendrían que crear en un SGBD relacional, indicando qué campos compondrían cada tabla y cuál sería la clave primaria de cada una de ellas [43, 80].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": "2b"}
    },
    {
        "question": "¿Cuál es la principal diferencia entre un cambio de contexto por interrupción y por llamada al sistema, en cuanto a quién inicia el proceso?",
        "ground_truth": "Una interrupción es un evento externo o asíncrono que interrumpe la CPU y es gestionado por hardware/software. Una llamada al sistema es una solicitud síncrona hecha por un programa de usuario al sistema operativo [10, 24].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "9b"}
    },
    {
        "question": "¿Cómo podría un SO optimizar el espacio de memoria de un proceso ya atendido en un 50%, según el ejercicio 1 del Tema 2?",
        "ground_truth": "El SO podría buscar reducir el 'Tamaño de los datos' o la 'Información del contexto del proceso' si parte de ella ya no es necesaria, o si puede ser descargada a almacenamiento secundario temporalmente, pero no el tamaño del código en ejecución [10, 17].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
        "question": "¿Es el análisis léxico la fase que sintetiza el programa objeto, según el ejercicio 4 del Tema 3?",
        "ground_truth": "No, el análisis léxico (b) descompone el programa fuente en sus componentes léxicos (tokens) [54, 58]. La síntesis del programa objeto (d) es el objetivo de las fases posteriores como la generación de código [54].",
        "difficulty": "básica",
        "category": "verificación de respuestas",
        "metadata": {"tema": "3", "ejercicio": 4}
    },
    {
        "question": "¿En un sistema paginado, si el número de página virtual es 5 y el marco de página es 0 (ejercicio 16 Tema 2), y el desplazamiento es 500, ¿cuál es la dirección física?",
        "ground_truth": "Si el número de página virtual es 5, su marco de página es 0. Con un tamaño de página de 1024 bytes, la dirección física = (0 * 1024) + 500 = 500 [35, 36].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 16}
    },
    {
        "question": "¿Qué información sobre la editorial se debe guardar en el diseño de la base de datos de una biblioteca (ejercicio 2 Tema 4)?",
        "ground_truth": "Para cada editorial se deberá guardar su dirección, localidad y país [6, 79].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
        "question": "¿Por qué es importante la clave primaria en el diseño de tablas relacionales?",
        "ground_truth": "La clave primaria es fundamental porque asegura la unicidad de cada registro en una tabla y permite establecer relaciones con otras tablas a través de claves foráneas [4, 43].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": null}
    },
    {
        "question": "¿Qué se pide en la parte (c) del ejercicio 19 del Tema 2 sobre las Tablas de Páginas?",
        "ground_truth": "Se pide cuántas Tablas de Páginas habrá en el sistema y cuántas entradas hay en cada tabla de páginas (filas) [40].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "19c"}
    },
    {
        "question": "¿Qué significa que el lenguaje máquina tiene 'la longitud necesaria para albergar la instrucción de mayor tamaño' en los ejercicios 4 y 9 del Tema 1?",
        "ground_truth": "Significa que el formato de las instrucciones de la arquitectura está diseñado para que todas las instrucciones, incluso la más larga (que podría incluir operandos inmediatos o direcciones), quepan en una única palabra de memoria o un múltiplo de ella, lo cual simplifica la captación de instrucciones [12, 15, 58].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿En qué se diferencia el procesamiento de la llamada al sistema 'Crear un proceso' de 'Modificar la prioridad de un proceso' en cuanto a si implican un cambio de contexto?",
        "ground_truth": "Crear un proceso (a) implica un cambio de contexto porque el sistema operativo debe preparar y activar un nuevo contexto para el proceso. Modificar la prioridad de un proceso (e), generalmente, no implica un cambio de contexto directo, ya que solo se actualiza un valor en el descriptor del proceso [30, 50].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "12a"}
    },
    {
        "question": "¿Cuál es la dificultad del ejercicio 19a del Tema 2 según los metadatos?",
        "ground_truth": "La dificultad del ejercicio 19a del Tema 2 es 'avanzada' [45].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "2", "ejercicio": "19a"}
    },
    {
        "question": "¿Qué significa 'modelo entidad-relación' en el contexto del ejercicio 2 del Tema 4?",
        "ground_truth": "El modelo entidad-relación es una herramienta de diseño conceptual de bases de datos que permite representar gráficamente las entidades (objetos importantes) del sistema, sus atributos y las relaciones entre ellas [43, 45].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
        "question": "¿En qué fase de la compilación se detectaría un error si aparece un paréntesis cerrado y no se ha podido emparejar con su correspondiente paréntesis abierto (ejercicio 15f Tema 3)?",
        "ground_truth": "Este tipo de error se detectaría en la fase de **análisis sintáctico** [74, 76].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "15f"}
    },
    {
        "question": "¿Qué implica para la velocidad de ejecución de un programa que deba estar cargado en la memoria principal?",
        "ground_truth": "Implica que, para ser ejecutado, el programa debe residir en una memoria de acceso rápido (RAM), lo que permite que la CPU acceda a sus instrucciones y datos de manera mucho más eficiente que si tuviera que leerlos directamente del disco duro, que es más lento [2, 6].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 3}
    },
    {
        "question": "¿Qué es una clave foránea en bases de datos relacionales?",
        "ground_truth": "Una clave foránea es un campo o conjunto de campos en una tabla que se refiere a la clave primaria de otra tabla, estableciendo una relación entre ellas y manteniendo la integridad referencial de los datos.",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": null}
    },
    {
        "question": "¿Qué datos de un proceso son los que pueden ocupar más espacio en memoria, según la figura del ejercicio 1 del Tema 2?",
        "ground_truth": "Según la figura, el 'Código' (12922 KB) es el que ocupa más espacio, seguido por la 'Pila' (3002 KB) y luego los 'Datos' (434 KB) [30].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
        "question": "¿Cuál es la función del registro PC (Program Counter)?",
        "ground_truth": "El registro PC (Program Counter) o Contador de Programa, contiene la dirección de memoria de la próxima instrucción a ejecutar por la CPU [12].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿En qué fase se detectaría una llamada a una función que no ha sido definida (ejercicio 15g Tema 3)?",
        "ground_truth": "Una llamada a una función que no ha sido definida se detectaría en la fase de **análisis semántico** (si el compilador verifica las declaraciones) o en la fase de **enlazado** (si la función se espera encontrar en una biblioteca externa) [36, 74].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "15g"}
    },
    {
        "question": "¿Qué significa un 'SGBD relacional' en el contexto del ejercicio 2 del Tema 4?",
        "ground_truth": "SGBD relacional se refiere a un Sistema Gestor de Bases de Datos Relacionales, un software que permite crear, administrar y consultar bases de datos organizadas bajo el modelo relacional, como MySQL, PostgreSQL, Oracle, etc. [9, 43].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
        "question": "¿En un sistema paginado, ¿cuál es el propósito de dividir las direcciones lógicas en número de página y desplazamiento?",
        "ground_truth": "Esta división permite la traducción de direcciones virtuales a físicas. El número de página se usa para buscar el marco de página correspondiente en la tabla de páginas, y el desplazamiento indica la posición dentro de ese marco de página [31, 38].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": null}
    },
    {
        "question": "¿Cuál es el tamaño total de la memoria física en el sistema paginado del ejercicio 19 del Tema 2?",
        "ground_truth": "El sistema dispone de una memoria física de 131072 bytes (128K) [93].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": 19}
    },
    {
        "question": "¿Cuál es el propósito de la opción 'E/S a Distancia' mencionada en los ejercicios 1 y 2 del Tema 1?",
        "ground_truth": "Los documentos no proporcionan una definición específica para 'E/S a Distancia' [1, 2, 18].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Qué es un 'token' en el análisis léxico?",
        "ground_truth": "Un token es la unidad léxica más pequeña con significado en un programa. Es el resultado del análisis léxico, que clasifica secuencias de caracteres (lexemas) en categorías como identificadores, palabras reservadas, operadores, etc. [29, 54].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 4}
    },
    {
        "question": "¿Qué ocurre si una dirección lógica excede el tamaño del espacio de direcciones de un proceso en un sistema paginado?",
        "ground_truth": "Si una dirección lógica excede el tamaño del espacio de direcciones de un proceso, se produciría un fallo de segmentación o un error de protección, ya que el sistema operativo no tiene un mapeo para esa dirección [17, 18].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 4}
    },
    {
        "question": "¿Qué restricciones de cardinalidad se presentan para Alumnos y Asignaturas en el ejercicio 3 del Tema 4?",
        "ground_truth": "La restricción es que 'Un alumno puede estar matriculado en muchas asignaturas' (N:M) [82].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 3}
    },
    {
        "question": "¿Cómo se representa la entidad 'Calificaciones' en el modelo ER y esquema relacional del ejercicio 1 del Tema 4?",
        "ground_truth": "La entidad 'Calificaciones' probablemente se representaría como una entidad de relación que une Alumno y Asignatura, con atributos propios como la nota, fecha, etc., formando una tabla intermedia con claves foráneas para Alumno y Asignatura [78].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 1}
    },
    {
        "question": "¿Qué es la 'fragmentación interna' en la gestión de memoria?",
        "ground_truth": "La fragmentación interna se refiere al espacio de memoria que se asigna a un proceso pero que no es utilizado por este. Esto ocurre cuando la unidad de asignación (ej. página o segmento) es más grande que la cantidad de memoria que el proceso realmente necesita [35, 39].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 17}
    },
    {
        "question": "¿Por qué el campo 'Protección' en la Tabla de Páginas (ejercicio 15d Tema 2) solo necesita 1 bit para sus valores (1=Sólo leer; 0=Cualquier tipo de acceso)?",
        "ground_truth": "Un solo bit es suficiente porque solo hay dos estados posibles de protección definidos: solo lectura (1) o cualquier tipo de acceso (0). Un bit binario puede representar perfectamente estos dos estados [19].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "15d"}
    },
    {
        "question": "¿Cuál es la tarea principal del ejercicio 7 del Tema 1?",
        "ground_truth": "El ejercicio 7 del Tema 1 pide describir los pasos que se dan en el sistema, y por quién (software o hardware), desde que el procesador detecta una interrupción pendiente hasta que se resuelve su tratamiento y el programa finaliza [14, 15, 94, 95].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 7}
    },
    {
        "question": "¿Qué es el 'código fuente' en el contexto de la compilación?",
        "ground_truth": "El código fuente es el programa escrito en un lenguaje de programación de alto nivel (como C++) antes de ser compilado o interpretado. Es el punto de partida del proceso de traducción [54, 67].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": null}
    },
    {
        "question": "¿Cómo se relaciona el 'desplazamiento' dentro de la página con el tamaño de página en un sistema paginado?",
        "ground_truth": "El desplazamiento dentro de la página define la ubicación exacta de un byte o palabra dentro de una página. El número de bits de desplazamiento determina directamente el tamaño de la página (2^bits_desplazamiento = tamaño_página) [19, 31].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "15a"}
    },
    {
        "question": "¿Qué implicaría si el puntero de pila (SP) indicara 'La dirección de memoria donde debe saltar el programa después de ejecutarse la instrucción de retorno correspondiente', como opción (a) del ejercicio 4 del Tema 1?",
        "ground_truth": "Esta opción (a) es incorrecta para la función del SP [8, 10]. Esa sería más bien la función de un registro de retorno o la parte superior de la pila para una instrucción CALL/RET clásica, no lo que el SP indica directamente [8].",
        "difficulty": "intermedia",
        "category": "verificación de respuestas",
        "metadata": {"tema": "1", "ejercicio": 4}
    },
    {
        "question": "¿Cómo se calcula la fragmentación interna si un proceso necesita 18.432 posiciones de memoria y el tamaño de página es de 2.048 bytes?",
        "ground_truth": "Número de páginas = ceil(18.432 / 2.048) = ceil(9.0) = 9 páginas. Espacio asignado = 9 * 2.048 = 18.432 bytes. Fragmentación interna = 18.432 - 18.432 = 0 bytes [42, 44].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": 21}
    },
    {
        "question": "¿Qué sucede con la CPU cuando ocurre una operación de E/S programada?",
        "ground_truth": "Durante una operación de E/S programada, la CPU permanece ociosa, esperando activamente a que el dispositivo de E/S complete su tarea antes de poder continuar con la ejecución del programa [1, 4].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 1}
    },
    {
        "question": "¿Qué entidades y relaciones clave se deben considerar al diseñar la base de datos de un centro comercial, según el ejercicio 4 del Tema 4?",
        "ground_truth": "Las entidades clave son Cliente, Trabajador (con subtipos Gerente, Jefe, Vendedor), Sección y Producto. La relación principal es 'Venta', que conecta Vendedor, Cliente y Producto [47, 82, 84, 86].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Qué pide la parte 9d del Tema 2?",
        "ground_truth": "La parte 9d del Tema 2 pregunta: Sea un proceso que cambia de Ejecutándose a Bloqueado, ¿puede este cambio provocar un cambio de estado en otros procesos? Si es así, ¿en qué casos? [26].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "9d"}
    },
    {
        "question": "¿Es el análisis sintáctico la fase que descompone el programa fuente en sus componentes léxicos (tokens)?",
        "ground_truth": "No, el análisis sintáctico (a) extrae la estructura de cada sentencia, reconociendo los componentes léxicos (tokens). La fase que descompone el programa fuente en sus componentes léxicos (tokens) es el análisis léxico (b) [54, 57].",
        "difficulty": "básica",
        "category": "verificación de respuestas",
        "metadata": {"tema": "3", "ejercicio": 5}
    },
    {
        "question": "¿Cómo se modelaría la restricción 'Una carrera puede tener muchas asignaturas' en un esquema relacional del ejercicio 3 del Tema 4?",
        "ground_truth": "Esta relación (uno a muchos) se modelaría añadiendo una clave foránea `id_carrera` en la tabla `Asignaturas` que referencie a la clave primaria `id_carrera` en la tabla `Carreras` [82].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 3}
    },
    {
        "question": "¿Qué implicaciones tiene el hecho de que 'Los jefes y vendedores sólo pueden pertenecer a una única sección' en el ejercicio 4 del Tema 4?",
        "ground_truth": "Esta restricción simplifica la relación, implicando una relación de uno a muchos entre Sección y Jefes/Vendedores, donde cada Jefe/Vendedor tendrá una clave foránea que apunta a una única Sección [84].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Qué se pide en el ejercicio 22 del Tema 2 si la dirección lógica es (4, 112) y la longitud del segmento 4 es 96?",
        "ground_truth": "El ejercicio pide la dirección física. Para la dirección lógica (4, 112): Segmento 4 tiene longitud 96. Como el desplazamiento (112) es mayor que la longitud (96) del segmento, esta dirección lógica no es válida y se produciría un error de acceso a memoria [44, 46].",
        "difficulty": "avanzada",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "22d"}
    },
    {
        "question": "¿Qué tipo de dificultad tiene el ejercicio 1 del Tema 1 según los metadatos?",
        "ground_truth": "La dificultad del ejercicio 1 del Tema 1 es 'básica' [96].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "1", "ejercicio": 1}
    },
    {
        "question": "¿Qué tipo de dificultad tiene el ejercicio 15a del Tema 3 según los metadatos?",
        "ground_truth": "La dificultad del ejercicio 15a del Tema 3 es 'intermedia' [71].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "3", "ejercicio": "15a"}
    },
    {
        "question": "¿Qué se pide en el apartado c) del ejercicio 22 del Tema 2?",
        "ground_truth": "Se pide la dirección física correspondiente a la dirección lógica (3, 400) [44].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "22c"}
    },
    {
        "question": "¿Cuál es el tamaño de página elegido en la solución del ejercicio 19 del Tema 2, y por qué?",
        "ground_truth": "El ejercicio 19a del Tema 2 pide justificar la elección. Para justificarla, se calcularía el espacio total ocupado por todos los procesos con cada tamaño de página propuesto, y se elegiría el que resulte en un uso más eficiente de la memoria física y menor fragmentación [40, 97, 98].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "19a"}
    },
    {
        "question": "¿Qué es la etapa de 'Preprocesado' en la compilación y qué tareas realiza?",
        "ground_truth": "La etapa de preprocesado es la primera fase del proceso de compilación, donde se procesan directivas como incluir archivos de cabecera, expandir macros y eliminar comentarios, antes de que el analizador léxico trabaje con el código [67, 69].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "14b"}
    },
    {
        "question": "¿Qué información sobre los libros se solicita en el ejercicio 2 del Tema 4?",
        "ground_truth": "Se solicita almacenar el título, número de páginas, ISBN, materia, año de edición, editorial y autor o autores [79, 80].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 2}
    },
    {
        "question": "¿Qué es el 'desplazamiento' en el contexto de la paginación?",
        "ground_truth": "El desplazamiento es la parte de la dirección lógica que especifica la posición del byte o palabra dentro de una página [19, 31].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": null}
    },
    {
        "question": "¿Qué implicaría una arquitectura con un PC (Contador de Programa) y un IR (Registro de Instrucción) para la ejecución de programas?",
        "ground_truth": "Una arquitectura con PC e IR es fundamental para el ciclo de captación-decodificación-ejecución. El PC apunta a la instrucción, el IR la almacena para que la unidad de control la decodifique y ejecute [12].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Cuál es la dificultad del ejercicio 4 del Tema 1 según los metadatos?",
        "ground_truth": "La dificultad del ejercicio 4 del Tema 1 es 'básica' [99].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "1", "ejercicio": 4}
    },
    {
        "question": "¿Por qué un único archivo objeto no siempre es un programa ejecutable y correcto, incluso con información de cabecera?",
        "ground_truth": "Un archivo objeto puede tener símbolos o referencias a funciones que están definidas en otros archivos objeto o bibliotecas. Sin un enlazador para resolver estas referencias, el archivo objeto no puede convertirse en un ejecutable funcional [65, 66].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": 12}
    },
    {
        "question": "¿En el ejercicio 1 del Tema 4, qué tipo de información se considera mínima para las asignaturas?",
        "ground_truth": "La información mínima para las asignaturas es su código de asignatura y nombre [46, 78].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 1}
    },
    {
        "question": "¿Qué rol tiene el software en el manejo de interrupciones, a diferencia del hardware?",
        "ground_truth": "El hardware detecta la interrupción y realiza el cambio de contexto inicial. El software (rutina de atención de interrupciones) maneja la lógica para procesar la interrupción, interactuar con el dispositivo y determinar las acciones a seguir [14-16].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 7}
    },
    {
        "question": "¿Qué implica para la gestión de memoria el que una página no pueda contener partes de dos segmentos diferentes (pila, código o datos) en el ejercicio 19 del Tema 2?",
        "ground_truth": "Esta restricción simplifica la gestión de memoria y la protección, ya que cada página puede tener un conjunto uniforme de permisos (lectura, escritura, ejecución) y no se mezclan áreas con diferentes propósitos dentro de una misma unidad de asignación [7, 93].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 19}
    },
    {
        "question": "¿En qué se diferencia una interrupción de un fallo de página en su origen?",
        "ground_truth": "Una interrupción puede ser externa (hardware) o interna (software) y se usa para señalar eventos. Un fallo de página es un tipo específico de interrupción (una excepción) generado por el hardware (MMU) cuando un proceso intenta acceder a una página que no está en memoria física [9].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 8}
    },
    {
        "question": "¿Cuál es la dificultad del ejercicio 17 del Tema 2 según los metadatos?",
        "ground_truth": "La dificultad del ejercicio 17 del Tema 2 es 'avanzada' [100].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "2", "ejercicio": 17}
    },
    {
        "question": "¿Por qué la optimización del espacio de memoria es importante en los sistemas operativos, según el ejercicio 1 del Tema 2?",
        "ground_truth": "La optimización del espacio de memoria es crucial para que el Sistema Operativo pueda disponer de un mayor número de procesos en memoria principal, mejorando la multiprogramación y el rendimiento general del sistema [89].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
        "question": "¿Qué implicaciones tiene para el diseño de bases de datos que 'Un alumno puede estar matriculado en muchas asignaturas' (ejercicio 3 Tema 4)?",
        "ground_truth": "Esta es una relación de muchos a muchos (N:M). En un esquema relacional, requiere la creación de una tabla intermedia (de enlace) para resolver esta relación, que contendrá las claves primarias de ambas entidades (Alumno y Asignatura) [21, 82].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 3}
    },
    {
        "question": "¿Es el registro de instrucción (IR) el que almacena la dirección de memoria de la siguiente instrucción a ejecutar?",
        "ground_truth": "No, el registro de instrucción (IR) almacena la instrucción que se está ejecutando actualmente. El registro que almacena la dirección de memoria de la siguiente instrucción a ejecutar es el Contador de Programa (PC) [12, 15, 24].",
        "difficulty": "intermedia",
        "category": "verificación de respuestas",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Cuál es el propósito del registro de pila (SP) en la arquitectura de un ordenador elemental?",
        "ground_truth": "El registro de pila (SP) o puntero de pila, es utilizado para gestionar la pila de llamadas, apuntando a la parte superior (o inferior, dependiendo de cómo crezca) de la pila en memoria, donde se guardan direcciones de retorno de subrutinas, parámetros y variables locales [8, 9, 12].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Qué se pide en el ejercicio 8 del Tema 1?",
        "ground_truth": "El ejercicio 8 del Tema 1 pregunta si hay diferencias si en vez de producirse una interrupción se ha producido una excepción, y pide indicar cuáles son [9, 15].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 8}
    },
    {
        "question": "¿Qué se pide en la parte d) del ejercicio 7 del Tema 2 ('Generar una interrupción software')?",
        "ground_truth": "Se pide si la operación 'Generar una interrupción software' puede realizarse únicamente en modo supervisor [22].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "7d"}
    },
    {
        "question": "¿Qué es un 'proceso' en el contexto de los sistemas operativos?",
        "ground_truth": "Un proceso es una instancia de un programa en ejecución, que incluye el código del programa, sus datos, su pila de ejecución, y el estado de sus registros, gestionado por el sistema operativo [89].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": null}
    },
    {
        "question": "¿Cuál es el propósito de la opción 'OUT Pi, Orig' en la descripción de instrucciones del ejercicio 6 del Tema 1?",
        "ground_truth": "OUT Pi, Orig es una operación que escribe el contenido del origen (Orig) en el puerto Pi [14].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "1", "ejercicio": 6}
    },
    {
        "question": "¿Qué operaciones del ejercicio 7 del Tema 2 pueden realizarse en modo usuario sin necesidad de modo supervisor?",
        "ground_truth": "Consultar la hora del sistema (a) y generar una interrupción software (d) pueden ser realizadas en modo usuario [22, 90].",
        "difficulty": "intermedia",
        "category": "listado",
        "metadata": {"tema": "2", "ejercicio": 7}
    },
    {
        "question": "¿Qué implicaría la longitud de palabra 'necesaria para albergar la instrucción de mayor tamaño' para el diseño del Registro de Instrucción (IR) en los ejercicios 4 y 9 del Tema 1?",
        "ground_truth": "El Registro de Instrucción (IR) tendría que ser al menos tan grande como la palabra de memoria para poder almacenar completamente la instrucción más larga después de ser captada [12, 15, 58].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Qué categoría tienen los ejercicios 1, 2, 3 y 4 del Tema 4 en los metadatos?",
        "ground_truth": "La categoría de estos ejercicios es 'directas sobre ejercicios' [4, 71, 83, 85].",
        "difficulty": "básica",
        "category": "listado",
        "metadata": {"tema": "4", "ejercicio": null}
    },
    {
        "question": "¿Qué rol tiene la Unidad de Gestión de Memoria (MMU) en el sistema operativo?",
        "ground_truth": "La MMU es un componente de hardware que se encarga de traducir las direcciones lógicas generadas por la CPU a direcciones físicas en la memoria principal, y también implementa la protección de memoria y la paginación/segmentación [17, 19].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": null}
    },
    {
        "question": "¿Cómo se resuelve la ambigüedad si en el ejercicio 19 del Tema 2 los procesos tuvieran diferentes necesidades de página para sus segmentos (código, pila, datos) y se elige un tamaño de página único para el sistema?",
        "ground_truth": "La elección de un tamaño de página único para el sistema implica que todos los procesos usarán ese tamaño, lo que puede generar fragmentación interna diferente en cada proceso y segmento. La justificación de la elección debe sopesar el impacto total en la memoria [40, 93].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "19a"}
    },
    {
        "question": "¿En qué fase de la compilación se detectaría un error de 'carácter o símbolo no esperado'?",
        "ground_truth": "Un error de 'carácter o símbolo no esperado' se detectaría en la fase de **análisis léxico** [72, 74, 101].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "3", "ejercicio": "15b"}
    },
    {
        "question": "¿Por qué un SO monoprogramado no necesita un planificador de procesos?",
        "ground_truth": "Un SO monoprogramado no necesita un planificador porque solo puede ejecutar un proceso a la vez, por lo que no hay necesidad de decidir qué proceso debe obtener la CPU en un momento dado [18, 21].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 5}
    },
    {
        "question": "¿Cuál es la restricción clave sobre los artículos vendidos en el ejercicio 4 del Tema 4?",
        "ground_truth": "La restricción clave es que 'Sólo un artículo por apunte de venta' [47].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Qué implicación tiene la ausencia de DMA en la interacción entre CPU y dispositivos de E/S?",
        "ground_truth": "La ausencia de DMA implica que la CPU debe gestionar directamente cada transferencia de datos desde y hacia los dispositivos de E/S, lo que la mantiene ocupada y reduce su disponibilidad para otras tareas [26, 27].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 10}
    },
    {
        "question": "¿Qué se solicita en el apartado a) del ejercicio 2 del Tema 4?",
        "ground_truth": "Se solicita dibujar el esquema conceptual utilizando el modelo entidad-relación [43, 80].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "4", "ejercicio": "2a"}
    },
    {
        "question": "¿Es cierto que el tamaño del código de un proceso puede reducirse para optimizar el espacio de memoria, según el ejercicio 1 del Tema 2?",
        "ground_truth": "No, no es cierto. El tamaño del código del proceso (d) es el conjunto de instrucciones que el proceso necesita para ejecutarse, y no puede reducirse una vez que el proceso está en ejecución y ya ha sido atendido en un 50% [10, 17].",
        "difficulty": "avanzada",
        "category": "verificación de respuestas",
        "metadata": {"tema": "2", "ejercicio": 1}
    },
    {
        "question": "¿Cuál es la ventaja fundamental de los modos de funcionamiento supervisor/usuario para el sistema operativo?",
        "ground_truth": "La ventaja fundamental es la protección. Permite al sistema operativo protegerse a sí mismo y al hardware de los errores o intentos de acceso no autorizado por parte de los programas de usuario [22-24].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": 8}
    },
    {
        "question": "¿Qué son los 'registros de propósito general' en la arquitectura del ordenador elemental del Tema 1?",
        "ground_truth": "Los registros de propósito general son pequeños almacenes de datos dentro de la CPU que se utilizan para guardar datos temporales, resultados de operaciones, y operandos, facilitando cálculos rápidos y acceso eficiente a los datos por parte de la CPU [12, 15].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": null}
    },
    {
        "question": "¿Qué tipos de errores de compilación se mencionan en el ejercicio 6 del Tema 3?",
        "ground_truth": "Se mencionan errores relacionados con la sintaxis (expected primary-expression), errores de tipo (invalid conversion) y errores léxicos (stray character) [32, 59].",
        "difficulty": "intermedia",
        "category": "listado",
        "metadata": {"tema": "3", "ejercicio": 6}
    },
    {
        "question": "¿Cuáles son las opciones para el tamaño de página que se barajan en el ejercicio 19 del Tema 2?",
        "ground_truth": "Las dos opciones de tamaño de página son páginas de 4096 bytes (4K) o páginas de 512 bytes (1/2K) [69, 93].",
        "difficulty": "básica",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": 19}
    },
    {
        "question": "¿Cómo se garantiza que un proceso que cambia de 'Ejecutándose' a 'Bloqueado' no pierda su progreso?",
        "ground_truth": "El Sistema Operativo guarda el contexto del proceso (incluyendo los valores de sus registros, PC, SP, etc.) en su Descriptor de Proceso (PCB) antes de ponerlo en estado 'Bloqueado', para poder restaurarlo y reanudarlo posteriormente desde el mismo punto [24, 26, 51].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": "9d"}
    },
    {
        "question": "¿Qué implicaciones tiene para el diseño de bases de datos que 'Cada sección está gestionada por un gerente' en el ejercicio 4 del Tema 4?",
        "ground_truth": "Implica una relación de uno a muchos entre Gerente y Sección, donde un Gerente puede gestionar una Sección, y una Sección es gestionada por un solo Gerente. Esto se modelaría con una clave foránea en la tabla `Secciones` que referencia al `id_gerente` [84].",
        "difficulty": "avanzada",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 4}
    },
    {
        "question": "¿Qué ocurre si una interrupción no es atendida correctamente por la rutina de tratamiento?",
        "ground_truth": "Si una interrupción no es atendida correctamente, podría llevar a un mal funcionamiento del dispositivo, pérdida de datos, inestabilidad del sistema operativo o incluso un fallo completo del sistema [14, 15].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "1", "ejercicio": 7}
    },
    {
        "question": "¿Qué es un 'modelo ER' en el contexto del ejercicio 1 del Tema 4?",
        "ground_truth": "Un Modelo ER (Entidad-Relación) es un diagrama conceptual que representa la estructura de una base de datos a través de entidades (objetos, conceptos), sus atributos (propiedades) y las relaciones que existen entre ellas [45, 78].",
        "difficulty": "básica",
        "category": "conceptual",
        "metadata": {"tema": "4", "ejercicio": 1}
    },
    {
        "question": "¿Cómo se relaciona la 'memoria real' con los 'marcos de página' en un sistema paginado?",
        "ground_truth": "La memoria real (o física) es el espacio de memoria directamente accesible por el hardware, y en un sistema paginado, se divide en unidades de tamaño fijo llamadas marcos de página, que son los contenedores de las páginas lógicas de los procesos [19, 31].",
        "difficulty": "intermedia",
        "category": "conceptual",
        "metadata": {"tema": "2", "ejercicio": null}
    },
    {
        "question": "¿Cuáles son las fases de la compilación de un lenguaje de programación de alto nivel?",
        "ground_truth": "Aunque no se listan exhaustivamente, los ejercicios del Tema 3 mencionan el análisis léxico, el análisis sintáctico y el análisis semántico como fases clave [54, 74]. También se incluye el preprocesado y la generación de código.",
        "difficulty": "intermedia",
        "category": "listado",
        "metadata": {"tema": "3", "ejercicio": null}
    },
    {
        "question": "¿Cómo se calcula la dirección física para la dirección lógica (0, 430) en la tabla de segmentos del ejercicio 22 del Tema 2?",
        "ground_truth": "Para el segmento 0: dirección base 219, longitud 600. El desplazamiento 430 es menor que la longitud. Dirección física = 219 (base) + 430 (desplazamiento) = 649 [44, 46].",
        "difficulty": "intermedia",
        "category": "directas sobre ejercicios",
        "metadata": {"tema": "2", "ejercicio": "22a"}
    }
]